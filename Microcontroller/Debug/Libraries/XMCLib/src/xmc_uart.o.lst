   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_uart.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_GetTransmitBufferStatus:
  23              	.LFB84:
  24              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2017-09-08
   4:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  84:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
  86:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  88:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  89:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  91:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  92:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  94:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
  96:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  97:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  98:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
  99:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 101:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 102:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 103:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 104:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 105:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 106:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 107:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 109:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 110:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 111:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 112:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 113:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 114:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 115:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 116:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 117:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 118:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 119:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 120:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 121:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 122:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 123:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 125:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 126:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 127:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 131:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 133:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 134:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 135:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 137:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 139:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 140:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 142:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 145:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 146:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 147:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 148:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 152:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 153:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 155:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 157:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 158:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 159:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 161:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 162:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 163:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 164:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 165:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 166:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 167:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 168:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 169:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 170:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 172:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 174:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 176:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 177:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 178:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 179:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 180:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 182:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 183:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 184:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 185:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 186:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 187:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 188:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 189:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 190:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 191:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 193:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 194:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 197:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 198:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 200:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 201:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 202:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 203:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 205:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 206:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 213:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 214:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 215:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 216:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 217:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 218:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 219:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 221:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 222:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 225:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 227:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 229:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 230:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 231:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 232:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 233:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 235:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 236:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 237:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 238:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 239:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 241:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 242:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 243:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 244:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 245:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 246:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 249:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 250:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 251:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 252:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 253:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 254:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 255:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 256:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 257:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 258:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 259:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 260:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 261:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 262:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 264:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 265:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 266:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 269:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 270:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 273:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 274:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 275:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 276:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 278:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 283:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 285:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 286:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 288:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 289:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 290:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 291:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 292:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 295:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 297:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 299:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 300:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 304:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 305:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 306:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 308:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 309:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 310:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 311:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 312:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 315:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 317:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 319:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 320:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 324:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 326:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 328:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 329:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 333:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 335:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 338:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 339:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 340:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 342:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 344:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 345:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 346:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 347:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 349:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 350:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 351:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 352:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 353:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 356:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 358:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 360:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 361:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 362:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 365:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 367:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 369:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 370:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 374:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 376:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 378:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 379:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 380:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 383:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 385:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 387:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 388:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 389:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 390:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 393:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 395:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 397:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 398:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 399:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 400:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 401:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 402:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 403:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 404:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 405:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 406:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 407:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 408:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 409:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 412:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 414:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 416:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 417:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 418:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 419:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 420:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 421:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 422:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 424:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 425:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 426:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 427:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 431:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 433:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 435:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 436:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 437:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 438:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 439:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 440:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 441:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 442:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 443:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 444:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 445:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 446:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 447:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 448:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 451:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 452:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
 453:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 454:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 455:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 456:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 457:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 458:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 461:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 462:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 463:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 464:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 465:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 466:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 467:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 468:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 469:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 470:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 471:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 472:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 473:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 474:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 476:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 479:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 480:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 481:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 482:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 483:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 485:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 487:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 488:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 489:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 490:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 491:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 492:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 493:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 494:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 495:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 496:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 497:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 498:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 499:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 500:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 501:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 502:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 503:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   };
 504:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 505:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 506:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 507:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 508:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 509:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 510:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 511:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 512:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 513:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   };
 514:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 515:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 516:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 517:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 518:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 519:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 520:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 521:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 522:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 523:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 524:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 525:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 526:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 527:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 528:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 529:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 530:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 531:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 532:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 533:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 534:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 535:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 536:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 537:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 539:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 540:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 541:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 542:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 543:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 544:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 545:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 546:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 547:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 548:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 550:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 551:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 552:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 553:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 554:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 555:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 556:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 557:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 558:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 559:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 560:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 562:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 563:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 564:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 566:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 567:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 568:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 569:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 570:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 571:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 572:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 573:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 574:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 575:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 576:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 577:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 578:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 579:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 581:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 582:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 583:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 584:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 585:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 586:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 587:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 588:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 589:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 590:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 591:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 592:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 593:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 595:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 596:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 597:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 599:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 600:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 601:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 602:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 603:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 605:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 606:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 607:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 608:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 609:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 610:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 611:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 612:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 613:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 614:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 615:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 616:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 617:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 619:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 620:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 621:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 622:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 623:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 624:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 625:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 626:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 627:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 628:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 629:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 630:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 631:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 633:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 634:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 635:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 636:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 637:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 638:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 639:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 640:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 641:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 642:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 643:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 644:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 645:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 646:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 647:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 648:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 649:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 650:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 651:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 652:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 653:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 654:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 655:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 656:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 657:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 658:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 660:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 661:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 662:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 663:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 664:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 665:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 666:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 667:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 668:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 669:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 670:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 671:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 672:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 673:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 674:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 675:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 676:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 677:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 678:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 679:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 680:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 681:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 682:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 683:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 684:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 685:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 686:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 687:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 688:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 689:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 690:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 691:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 692:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 693:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 694:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 695:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 696:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 697:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 698:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 699:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 700:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 701:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 702:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 703:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 704:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 705:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 706:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 707:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 708:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 709:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 710:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 711:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 712:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 713:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 714:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 715:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 716:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 717:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 718:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 719:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 720:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 721:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 722:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 723:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 726:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 728:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 729:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 730:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 731:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 732:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 733:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 734:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 735:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 736:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 737:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 738:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 739:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 740:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 741:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 742:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 744:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 745:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 746:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 747:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 748:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 749:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 750:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 751:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 752:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 753:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 757:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 758:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 759:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 760:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 761:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 762:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 763:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 765:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 766:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 767:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 768:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 769:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 770:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 771:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 772:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 773:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 774:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 775:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 776:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 777:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 778:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 779:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 780:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 781:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 782:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 783:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 784:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 785:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 786:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 787:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 788:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 789:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 790:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 791:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 792:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 793:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 794:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 795:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 799:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 800:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 801:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 803:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 805:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 807:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 813:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 815:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 816:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 817:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 818:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 819:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 820:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 821:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 822:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 823:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 824:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 825:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 826:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 827:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 828:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 829:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 830:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 831:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 832:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 833:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 834:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 835:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 836:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 837:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 838:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 839:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 840:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 841:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 842:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 843:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 844:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 845:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 846:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 847:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 848:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 849:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 850:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 851:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 852:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 853:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 854:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 855:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 856:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 857:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 858:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 859:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 860:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 861:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 862:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 863:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 864:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 865:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 866:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 867:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 868:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 869:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 870:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 871:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 872:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 873:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 874:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 875:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 876:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 877:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 878:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 879:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 880:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 881:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 882:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 883:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 884:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 885:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 886:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 887:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 888:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 889:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 890:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 893:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 895:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 896:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 897:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 898:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 899:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 900:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 901:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 902:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 903:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 904:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 905:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 908:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 910:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 911:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 912:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 913:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 914:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 915:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 916:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 917:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 918:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 919:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 920:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 926:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 927:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 929:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 930:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 933:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 935:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 936:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 937:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 938:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 939:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 940:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 941:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 942:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 943:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 944:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 945:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 946:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 947:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 949:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 950:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 951:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 952:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 953:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 954:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 955:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 956:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 957:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 958:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 959:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 960:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 961:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 962:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
 963:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
 964:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 965:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 966:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 967:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
 968:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
 969:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 970:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
 973:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
 975:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
 977:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
 979:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
 980:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 981:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 982:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
 983:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
 984:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
 985:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 986:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 987:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 988:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
 989:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
 990:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 991:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
 992:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 993:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
 994:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
 995:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
 996:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
 997:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
 998:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
 999:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1000:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1001:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1002:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1003:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1004:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1005:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1006:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1007:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1008:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1009:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1010:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1011:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1012:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1013:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1014:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1015:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1016:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1017:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1018:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1019:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1020:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1021:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1022:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1023:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1024:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1025:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1026:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1027:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1028:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1029:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1030:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1031:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1032:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1033:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1034:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1035:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1036:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1037:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1038:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1039:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1040:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1041:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1042:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1043:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1044:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1045:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1046:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1047:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1048:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1049:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1050:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1051:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1052:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1053:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1054:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1055:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1056:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1057:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1058:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1059:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1060:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1061:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1062:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1063:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1064:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1065:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1066:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1067:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1068:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1069:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1070:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1071:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1072:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1073:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1074:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1075:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1081:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1082:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1083:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1084:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1085:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1086:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1087:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1088:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1089:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1090:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1091:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1092:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1093:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1094:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1095:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1096:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1097:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1098:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1099:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1100:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1101:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1102:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1103:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1104:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1105:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1106:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1107:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1108:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1109:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1110:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1111:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1112:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1113:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1114:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1115:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1116:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1117:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1118:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1119:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1120:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1121:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1122:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1123:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1124:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1125:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1126:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1127:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1128:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1129:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1130:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1131:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1132:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1133:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1134:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1135:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1136:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1137:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
1138:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1139:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1140:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1141:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1142:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1143:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1144:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1145:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1146:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1147:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1148:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1149:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1150:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1151:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1152:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1153:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1154:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1155:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1156:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1157:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1158:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1160:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1161:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1162:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1163:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1164:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1165:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1166:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1167:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1168:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1169:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1170:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1171:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1172:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1173:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1174:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1175:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1176:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1177:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1178:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1179:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1181:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1182:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1183:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1183 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1184:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  39              	 .loc 1 1184 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a 9B6B     	 ldr r3,[r3,#56]
  42 000c DBB2     	 uxtb r3,r3
  43 000e 7F22     	 mov r2,#127
  44 0010 9343     	 bic r3,r2
  45 0012 DBB2     	 uxtb r3,r3
1185:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
  46              	 .loc 1 1185 0
  47 0014 181C     	 mov r0,r3
  48 0016 BD46     	 mov sp,r7
  49 0018 02B0     	 add sp,sp,#8
  50              	 
  51 001a 80BD     	 pop {r7,pc}
  52              	 .cfi_endproc
  53              	.LFE84:
  55              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  56              	 .align 2
  57              	 .code 16
  58              	 .thumb_func
  60              	XMC_USIC_CH_SetMode:
  61              	.LFB119:
1186:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1187:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1188:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1189:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1190:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1191:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1192:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1193:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1194:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1195:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1196:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1197:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1198:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1199:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1200:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1201:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1202:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1203:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1204:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1205:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1206:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1207:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1208:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1209:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1210:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1211:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1216:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1217:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1218:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1219:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1220:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1221:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1222:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1223:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1224:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1225:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1226:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1228:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1230:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1231:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1232:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1233:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1236:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1237:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1238:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1239:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1240:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1241:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1245:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1246:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1247:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1249:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1250:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1251:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1252:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1253:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1254:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1255:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1256:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1257:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1258:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1259:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1260:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1261:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1262:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1263:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1264:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1265:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1266:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1267:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1268:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1269:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1270:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1271:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1272:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1273:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1274:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1275:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1276:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1277:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1278:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1279:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1280:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1281:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1282:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1283:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1284:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1285:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1286:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1287:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1288:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1289:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1290:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1291:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1292:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1293:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1294:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1295:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1296:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1297:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1298:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1299:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1300:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1301:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1302:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1303:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1304:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1305:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1306:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1307:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1308:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1309:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1310:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1311:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1312:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1313:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1314:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1315:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1316:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1317:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1318:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1319:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1320:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1321:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1322:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1323:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1324:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1325:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1326:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1327:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1328:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1329:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1330:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1331:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1332:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1333:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1334:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1335:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1336:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1337:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1338:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1339:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1340:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1341:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1342:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1343:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1344:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1345:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1346:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1347:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1348:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1349:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1350:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1351:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1352:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1353:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1354:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1355:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1356:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1357:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1358:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1359:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1360:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1361:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1362:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1363:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1364:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1365:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1366:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1367:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1368:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1369:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1370:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1371:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1372:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1373:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1374:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1375:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1376:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1377:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1378:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1379:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1380:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1381:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1382:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1383:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1384:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1385:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1386:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1387:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1388:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1389:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1390:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1391:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1392:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1393:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1394:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1395:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1396:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1397:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1398:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1399:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1400:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1401:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1402:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1403:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1404:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1405:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1406:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1407:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1408:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1409:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1410:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1411:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1412:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1413:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1414:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1416:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1417:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1418:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1419:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1420:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1421:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1422:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1423:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1424:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1425:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1426:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1427:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1428:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1429:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1430:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1431:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1432:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1433:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1434:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1435:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1436:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1437:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1438:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1439:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1440:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1441:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1442:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1443:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1444:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1445:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1446:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1447:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1448:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1449:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1450:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1451:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1452:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1453:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1454:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1455:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1456:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1457:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1458:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1459:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1460:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1461:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1462:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1463:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1464:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1465:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1466:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1467:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1468:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1469:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1470:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1471:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1472:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1473:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1474:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1475:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1476:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1477:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1478:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1479:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1480:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1481:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1482:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1483:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1484:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1485:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1486:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1487:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1488:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1489:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1490:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1491:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1492:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1493:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1494:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1495:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1496:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1497:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1498:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1499:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1500:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1501:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1502:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1503:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1504:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1505:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1506:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1507:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1508:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1509:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1510:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1511:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1512:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1513:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1514:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1515:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1516:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1517:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1518:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1519:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1520:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1521:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1522:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1523:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1524:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1525:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1526:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1527:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1528:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1529:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1530:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1531:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1532:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1533:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1534:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1535:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1536:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1537:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1538:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1539:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1540:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1541:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1542:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1543:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1544:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1545:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1546:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1547:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1548:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1549:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1550:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1551:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1552:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1553:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1554:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1555:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1556:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1557:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1558:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1559:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1560:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1561:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1562:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1563:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1564:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1565:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1566:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1567:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1568:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1569:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1570:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1571:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1572:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1573:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1574:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1575:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1576:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1577:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1578:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1579:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1580:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1581:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1582:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1583:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1584:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1585:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1586:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1587:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1588:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1589:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1590:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1591:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1592:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1593:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1594:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1595:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1596:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1597:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1598:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1599:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1600:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1601:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1602:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1603:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1604:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1605:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1606:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1607:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1608:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1609:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1610:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1611:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1612:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1613:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1614:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1615:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1616:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1617:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1618:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1619:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1620:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1621:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1622:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1623:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1624:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1625:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1626:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1627:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1628:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1629:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1630:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1631:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1632:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1633:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1635:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1637:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1638:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1639:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1640:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1645:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1646:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1647:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1648:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1649:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1650:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1651:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1652:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1653:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1654:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1655:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1656:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1658:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1661:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1662:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1663:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1664:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1665:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1666:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1667:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1668:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1669:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1670:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1671:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1672:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1673:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1675:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1676:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1677:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1678:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1679:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1680:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1681:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1682:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1683:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1684:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1685:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1686:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1687:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1688:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1689:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1690:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1691:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1692:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1693:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1694:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1695:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1696:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1697:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1698:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1699:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1700:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1701:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1702:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1703:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1705:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1710:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1711:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1712:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1713:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1714:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1715:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1716:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1717:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1718:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1719:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1720:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1721:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1722:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1723:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1724:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1725:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1727:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1728:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** */
1729:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1730:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1731:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1732:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1733:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1734:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1735:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1736:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1737:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1738:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1739:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1740:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1741:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1742:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1743:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1744:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1745:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1746:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1747:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1748:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1749:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1750:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1751:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1752:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1753:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1754:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1759:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1760:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1761:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1762:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1763:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1764:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1765:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1766:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1767:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1768:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1769:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1770:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1771:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1772:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1773:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1774:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1775:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1776:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1777:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1778:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1779:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1780:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1781:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1782:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1783:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1784:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1785:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1786:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1787:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1788:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1789:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1790:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1791:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1792:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1793:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1796:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1797:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1798:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1799:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1800:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1801:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1802:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1803:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1804:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1805:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1806:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1807:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1808:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1809:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1810:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1811:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1812:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1813:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1814:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1815:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1816:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1817:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1818:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1819:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1820:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1821:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1822:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1823:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1824:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1825:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1826:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1827:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1828:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1829:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1830:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1831:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1832:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1833:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1834:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1835:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1836:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1837:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1838:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1839:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1840:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1841:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1842:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1843:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1844:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1845:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1846:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1847:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1848:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1849:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1850:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1851:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1852:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1853:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1854:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1855:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1856:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1857:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1858:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1859:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1860:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1861:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1862:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1863:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1864:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1865:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1866:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1867:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1868:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1869:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1870:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1871:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1872:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1873:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1874:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1875:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1876:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1877:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1878:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1879:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1880:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1881:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1882:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1883:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1884:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1885:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1886:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1887:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1888:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1889:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1890:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1891:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1892:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1893:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1894:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1895:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1896:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1897:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1898:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1899:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1900:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1901:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1902:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1903:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1904:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1905:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1906:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1907:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1908:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1909:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1910:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1911:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1912:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1913:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1914:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1915:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1916:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1917:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1918:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1919:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1920:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1921:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1922:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1923:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1924:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
1925:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
1931:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1932:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1933:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1934:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
1936:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
1937:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
1938:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
1939:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1940:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1941:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1942:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1943:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1944:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
1945:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1946:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1947:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
1949:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
1950:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
1951:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1952:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1953:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1954:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1955:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1956:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
1957:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1958:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1959:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1960:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1961:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1962:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
1963:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1964:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1965:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
1966:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1967:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1968:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1969:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1970:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
1971:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1972:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1973:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1974:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1975:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1976:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1977:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1982:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1983:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1984:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
1985:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
1986:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1988:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
1989:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
1990:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
1991:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
1992:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
1993:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
1994:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
1995:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
1996:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1997:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1998:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1999:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
2000:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2001:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2002:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2003:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
2004:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2005:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2006:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
2007:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2008:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
2009:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2010:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
2011:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
2012:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
2013:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2014:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2015:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2016:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2017:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2018:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
2019:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2020:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2021:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
2022:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2023:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
2024:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
2025:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2026:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
2027:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
2028:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2029:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2030:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2031:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2032:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2033:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2034:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2035:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2036:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2037:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2038:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2039:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
2040:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2041:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2042:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2043:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2044:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2045:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2046:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2047:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 
2048:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
2049:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2050:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
2051:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
2052:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
2053:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2054:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
2055:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2056:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2057:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
2058:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** 
2059:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** /**
2060:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2061:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2062:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2063:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2064:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2065:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2066:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2067:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
2068:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2069:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2070:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2071:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2072:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  *
2073:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2074:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2075:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****  */
2076:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2077:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** {
  62              	 .loc 1 2077 0
  63              	 .cfi_startproc
  64 0000 80B5     	 push {r7,lr}
  65              	.LCFI3:
  66              	 .cfi_def_cfa_offset 8
  67              	 .cfi_offset 7,-8
  68              	 .cfi_offset 14,-4
  69 0002 82B0     	 sub sp,sp,#8
  70              	.LCFI4:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI5:
  74              	 .cfi_def_cfa_register 7
  75 0006 7860     	 str r0,[r7,#4]
  76 0008 0A1C     	 mov r2,r1
  77 000a FB1C     	 add r3,r7,#3
  78 000c 1A70     	 strb r2,[r3]
2078:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  79              	 .loc 1 2078 0
  80 000e 7B68     	 ldr r3,[r7,#4]
  81 0010 1B6C     	 ldr r3,[r3,#64]
  82 0012 0F22     	 mov r2,#15
  83 0014 9343     	 bic r3,r2
  84 0016 1A1C     	 mov r2,r3
  85 0018 FB1C     	 add r3,r7,#3
  86 001a 1B78     	 ldrb r3,[r3]
  87 001c 1A43     	 orr r2,r3
  88 001e 7B68     	 ldr r3,[r7,#4]
  89 0020 1A64     	 str r2,[r3,#64]
2079:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_usic.h **** }
  90              	 .loc 1 2079 0
  91 0022 BD46     	 mov sp,r7
  92 0024 02B0     	 add sp,sp,#8
  93              	 
  94 0026 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE119:
  98              	 .section .text.XMC_UART_CH_GetStatusFlag,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_UART_CH_GetStatusFlag:
 104              	.LFB126:
 105              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc/xmc_uart.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @file xmc_uart.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @date 2017-10-25
   4:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Initial
  41:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *      
  42:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Description updated <br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_TriggerServiceRequest() and XMC_UART_CH_SelectInterruptNodePointer <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-06-20:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-09-01:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br
  51:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_EVENT_t enum for supporting XMC_UART_CH_EnableEvent() and XMC_UART_CH
  52:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *       for supporting multiple events configuration <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  54:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 2016-05-20:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableDataTransmission() and XMC_UART_CH_DisableDataTransmission()
  56:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 2017-10-25:
  58:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableMasterClock() and XMC_UART_CH_DisableMasterClock()
  59:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  60:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @endcond 
  61:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  62:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
  63:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #ifndef XMC_UART_H
  65:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART_H
  66:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
  67:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  68:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * HEADER FILES
  69:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  70:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
  71:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #include "xmc_usic.h"
  72:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
  73:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
  74:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup XMClib XMC Peripheral Library
  75:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  76:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
  77:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
  79:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup UART
  80:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @brief Universal Asynchronous Receiver/Transmitter (UART) driver for XMC microcontroller family.
  81:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
  82:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * The UART driver uses Universal Serial Interface Channel(USIC) module to implement UART protocol.
  83:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * It provides APIs to configure USIC channel for UART communication. The driver enables the user
  84:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * in getting the status of UART protocol events, configuring interrupt service requests, protocol
  85:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * related parameter configuration etc.
  86:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver features:
  88:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Configuration structure XMC_UART_CH_CONFIG_t and initialization function XMC_UART_CH_Init()
  89:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Enumeration of events with their bit masks @ref XMC_UART_CH_EVENT_t, @ref XMC_UART_CH_STATUS_
  90:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows the selection of input source for the DX0 input stage using the API XMC_UART_CH_SetInp
  91:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows configuration of baudrate using XMC_UART_CH_SetBaudrate() and configuration of data le
  92:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  XMC_UART_CH_SetWordLength() and XMC_UART_CH_SetFrameLength()
  93:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Provides the status of UART protocol events, XMC_UART_CH_GetStatusFlag()
  94:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows transmission of data using XMC_UART_CH_Transmit() and gets received data using XMC_UAR
  95:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  96:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  97:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
  98:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 100:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * MACROS
 101:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 102:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC0)
 104:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH0 XMC_USIC0_CH0 /**< USIC0 channel 0 base address */
 105:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH1 XMC_USIC0_CH1 /**< USIC0 channel 1 base address */
 106:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 107:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC1)
 109:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH0 XMC_USIC1_CH0 /**< USIC1 channel 0 base address */
 110:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH1 XMC_USIC1_CH1 /**< USIC1 channel 1 base address */
 111:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 112:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC2)
 114:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH0 XMC_USIC2_CH0 /**< USIC2 channel 0 base address */
 115:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH1 XMC_USIC2_CH1 /**< USIC2 channel 1 base address */
 116:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 117:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 118:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 119:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * ENUMS
 120:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 121:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 123:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver status
 124:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS
 126:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 127:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_OK,     /**< UART driver status : OK*/
 128:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_ERROR,  /**< UART driver status : ERROR */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_BUSY    /**< UART driver status : BUSY */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_t;
 131:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 133:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** * UART portocol status. The enum values can be used for getting the status of UART channel.
 134:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** *
 135:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS_FLAG
 137:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 138:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE = USIC_CH_PSR_ASCMode_TXIDLE_Msk,                 /**< 
 139:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEPTION_IDLE = USIC_CH_PSR_ASCMode_RXIDLE_Msk,                    /**< 
 140:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED = USIC_CH_PSR_ASCMode_SBD_Msk,       /**< 
 141:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_COLLISION_DETECTED = USIC_CH_PSR_ASCMode_COL_Msk,                   /**< 
 142:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_NOISE_DETECTED = USIC_CH_PSR_ASCMode_RNS_Msk,              /**< 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_0 = USIC_CH_PSR_ASCMode_FER0_Msk,          /**< 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_1 = USIC_CH_PSR_ASCMode_FER1_Msk,          /**< 
 145:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_FRAME_FINISHED = USIC_CH_PSR_ASCMode_RFF_Msk,               /**< 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED = USIC_CH_PSR_ASCMode_TFF_Msk,           /**< 
 147:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY = USIC_CH_PSR_ASCMode_BUSY_Msk,                /**< 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_ASCMode_RSIF_Msk,           /**< 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_ASCMode_DLIF_Msk,                /**< 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_ASCMode_TSIF_Msk,           /**< 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_ASCMode_TBIF_Msk,          /**< 
 152:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_RIF_Msk,                   /**< 
 153:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_AIF_Msk,       /**< 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_ASCMode_BRGIF_Msk      /**< 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_FLAG_t;
 156:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 157:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 158:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** * UART configuration events. The enums can be used for configuring events using the CCR register.
 159:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** */
 160:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_CH_UART_EVENT
 161:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 162:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 168:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   
 170:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_SYNCHRONIZATION_BREAK = USIC_CH_PCR_ASCMode_SBIEN_Msk, /**< Event synchronizati
 171:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_COLLISION = USIC_CH_PCR_ASCMode_CDEN_Msk,              /**< Event collision */
 172:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVER_NOISE = USIC_CH_PCR_ASCMode_RNIEN_Msk,        /**< Event receiver nois
 173:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FORMAT_ERROR = USIC_CH_PCR_ASCMode_FEIEN_Msk,          /**< Event format error 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FRAME_FINISHED = USIC_CH_PCR_ASCMode_FFIEN_Msk         /**< Event frame finishe
 175:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_EVENT_t;
 176:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 177:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 178:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * UART Input sampling frequency options
 179:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT_SAMPLING_FREQ
 181:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 182:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FPERIPH            = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH,    
 183:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_D
 184:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_SAMPLING_FREQ_t;
 185:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 186:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 187:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * UART input stages
 188:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 189:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT
 190:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 191:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD = 0UL   /**< UART input stage DX0*/
 192:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #if UC_FAMILY == XMC1
 193:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   ,
 194:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD1 = 3UL, /**< UART input stage DX3*/
 195:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD2 = 5UL  /**< UART input stage DX5*/
 196:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 197:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_t;
 198:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 199:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 200:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 201:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * UART channel interrupt node pointers
 202:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INTERRUPT_NODE_POINTER
 204:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 205:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 206:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 207:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEI
 208:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTER
 209:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTO
 210:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INTERRUPT_NODE_POINTER_t;
 211:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 212:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 213:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * DATA STRUCTURES
 214:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 215:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 217:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * UART initialization structure
 218:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** typedef struct XMC_UART_CH_CONFIG
 220:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   uint32_t baudrate;                         /**< Desired baudrate. \b Range: minimum= 100, maximum
 222:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t data_bits;                         /**< Number of bits for the data field. Value configur
 223:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 224:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t frame_length;                      /**< Indicates nmber of bits in a frame. Configured as
 225:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 226:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t stop_bits;                         /**< Number of stop bits. \b Range: minimum= 1, maximu
 227:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t oversampling;						           /**< Number of samples for a symbol(DCTQ).\b Range: minimum
 228:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;     /**< Parity mode. \b Range: @ref XMC_USIC_CH_PARITY_MO
 229:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                                   @ref XMC_USIC_CH_PARITY_MODE_ODD*/
 230:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_CONFIG_t;
 231:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 232:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 233:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * API PROTOTYPES
 234:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 235:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 236:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #ifdef __cplusplus
 237:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** extern "C" {
 238:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 239:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 240:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 241:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 242:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1,XMC_UART1_CH0, XMC_UART1_CH1,XMC_UART2_CH0, XM
 243:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param config Constant pointer to UART configuration structure of type @ref XMC_UART_CH_CONFIG_t
 244:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status of initializing the USIC channel for UART protocol.\n
 245:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_STATUS_OK if initialization is successful.\n
 246:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                    @ref XMC_UART_CH_STATUS_ERROR if configuration of baudrate failed.
 247:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 248:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 249:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Initializes the USIC channel for UART protocol.\n\n
 250:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * During the initialization, USIC channel is enabled, baudrate is configured with the defined over
 251:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * in the intialization structure. If the oversampling value is set to 0 in the structure, the defa
 252:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * is considered. Sampling point for each symbol is configured at the half of sampling period. Symb
 253:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * majority decision among 3 samples. 
 254:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length is configured with the number of data bits. If the value of \a frame_length is 0, th
 255:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * is set to the same value as word length. If \a frame_length is greater than 0, it is set as the 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Parity mode is set to the value configured for \a parity_mode.
 257:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * The USIC channel should be set to UART mode by calling the XMC_UART_CH_Start() API after the ini
 258:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 259:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 260:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Start(), XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 261:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Init(XMC_USIC_CH_t *const channel, const XMC_UART_CH_CONFIG_t *const config);
 263:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 264:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 265:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 266:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 267:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 268:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 269:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 270:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the USIC channel operation mode to UART mode.\n\n
 271:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is set to 2(UART mode). This API should be called after configurin
 272:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * the USIC channel. Transmission and reception can happen only when the UART mode is set. 
 273:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * This is an inline function.
 274:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 275:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 277:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_Start(XMC_USIC_CH_t *const channel)
 279:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 280:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   channel->CCR = (uint32_t)(((channel->CCR) & (~USIC_CH_CCR_MODE_Msk)) | (uint32_t)XMC_USIC_CH_OPER
 281:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 282:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 283:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 284:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 285:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 286:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status to indicate if the communication channel is stopped successf
 287:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_OK if the communication channel is stopped.
 288:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_BUSY if the communication channel is busy.
 289:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 290:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 291:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Stops the UART communication.\n\n
 292:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is reset. This disables the communication.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Before starting the communication again, the channel has to be reconfigured.
 294:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 295:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init() \n\n\n
 297:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 298:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel);
 299:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 300:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 301:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 302:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1 ,XMC_UART1_CH0, XMC_UART1_CH1, XMC_UART2_CH0,
 303:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param rate Desired baudrate. \n
 304:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *           \b Range: minimum value = 100, maximum value depends on the peripheral clock frequency
 305:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/
 306:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 307:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 This can be related to the number of samples for each logic state of the data signal.\n
 308:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 \b Range: 4 to 32. Value should be chosen based on the protocol used.
 309:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status indicating the baudrate configuration.\n
 310:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 			     \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 311:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 312:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 313:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description:</b><br>
 314:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the bus speed in bits per second.\n\n
 315:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Derives the values of \a STEP and PDIV to arrive at the optimum realistic speed possible.
 316:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \a oversampling is the number of samples to be taken for each symbol of UART protocol.
 317:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Default \a oversampling of 16 is considered if the input \a oversampling is less than 4. It is r
 318:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * a minimum oversampling of 4 for UART.
 319:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init(), XMC_UART_CH_Stop()
 322:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 323:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 324:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 325:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 326:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 327:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 328:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  data Data to be transmitted. \n 
 329:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 16 bit unsigned data within the range 0 to 65535. Actual size of
 330:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          data transmitted depends on the configured number of bits for the UART protocol in the 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 332:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 333:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 334:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Transmits data over serial communication channel using UART protocol.\n\n
 335:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either put to the transmit FIFO or to TBUF register.
 336:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Before putting data to TBUF, the API waits for TBUF to finish shifting its contents to shift reg
 337:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * So user can continuously execute the API without checking for TBUF busy status. Based on the num
 338:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * data bits configured, the lower significant bits will be extracted for transmission.
 339:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 340:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: When FIFO is not configured, the API waits for the TBUF to be available. 
 341:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * This makes the execution a blocking call.
 342:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 343:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 344:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetReceivedData() \n\n\n
 345:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data);
 347:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 348:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 349:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 350:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 351:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return uint16_t Received data over UART communication channel.
 352:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 353:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides one word of data received over UART communication channel.\n\n
 354:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either read from the receive FIFO or RBUF register.
 355:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Before returning the value, there is no check for data validity. User should check the appropria
 356:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * data receive flags(standard receive/alternative receive/FIFO standard receive/FIFO alternative r
 357:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * before executing the API. Reading from an empty receive FIFO can generate a receive error event.
 358:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 359:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 360:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetStatusFlag(), XMC_UART_CH_Transmit() \n\n\n
 361:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 363:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 364:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 365:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 366:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 367:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  word_length Data word length. \n
 368:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 16.
 369:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 370:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 371:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 372:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the data word length in number of bits.\n\n
 373:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length can range from 1 to 16. It indicates the number of data bits in a data word.
 374:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a word_length will be decremented by 1 before setting the value to \a SCTR registe
 375:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * If the UART data bits is more than 16, then the frame length should be set to the actual number 
 376:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * word length should be configured with the number of bits expected in each transaction. For examp
 377:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * for UART communication is 20 bits, then the frame length should be set as 20. Word length can be
 378:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * transmit and receive handling. If data is stored as 8bit array, then the word length can be set 
 379:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * a full message of UART data should be transmitted/ received as 3 data words.
 380:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 381:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 382:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetFrameLength() \n\n\n
 383:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 384:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
 385:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 386:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 387:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 388:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 389:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 390:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 391:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 392:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  frame_length Number of data bits in each UART frame. \n
 393:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 64.
 394:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 395:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 396:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 397:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the number of data bits for UART communication.\n\n
 398:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * The frame length is configured by setting the input value to \a SCTR register.
 399:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a frame_length will be decremented by 1, before setting it to the register.
 400:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Frame length should not be set to 64 for UART communication.
 401:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 402:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 403:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetWordLength() \n\n\n
 404:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 405:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
 406:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 407:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
 408:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 409:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 412:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 413:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Event bitmasks to enable. Use the type @ref XMC_UART_CH_EVENT_t for naming events.
 414:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 415:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 416:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 417:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 418:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 419:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 420:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables interrupt events for UART communication.\n\n
 421:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 422:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @ref XMC_UART_CH_EVENT_t enumerates multiple event bitmasks. These enumerations can be used as i
 423:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are configured by setting bits in the CCR register.
 424:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(), XMC_UART_CH_SetInterruptNodePointer(), XMC_UART_CH_GetStatusFlag() \
 426:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 427:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 428:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 430:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 431:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 432:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Bitmask of events to disable. Use the type @ref XMC_UART_CH_EVENT_t for naming eve
 433:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 434:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 435:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 436:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 437:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 438:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 439:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the interrupt events by clearing the bits in CCR register.\n\n
 440:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 441:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EVENT_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as i
 442:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 443:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 444:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_ClearStatusFlag(), XMC_UART_CH_EnableEvent() \n\n\n
 445:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 446:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 447:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 448:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 449:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 450:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 451:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number for generating protocol interrupts.\n
 452:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: 0 to 5.
 453:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 454:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 455:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 456:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for UART channel protocol events.\n\n
 457:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * For all the protocol events enlisted in the enumeration XMC_UART_CH_EVENT_t, one common
 458:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * interrupt gets generated. The service request connects the interrupt node to the UART 
 459:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * protocol events.
 460:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 461:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 462:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 463:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 464:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 465:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 466:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                                          const uint8_t service_request)
 467:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 468:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, 
 469:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                               (uint32_t)service_request);
 470:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 471:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 472:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 473:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 474:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 475:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 476:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: @ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 477:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  			@ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 478:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number.\n
 479:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: 0 to 5.
 480:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 481:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 482:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 483:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for USIC channel events. \n\n
 484:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 485:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 486:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 487:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 488:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 489:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 490:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 491:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 492:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const XMC_UART_CH_INTERRUPT_NODE_POINTE
 493:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const uint32_t service_request)
 494:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 495:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 496:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 		                                       (uint32_t)service_request);
 497:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 498:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 499:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 500:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 501:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@r
 502:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 503:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 			\b Range: 0 to 5.
 504:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 505:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 506:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 507:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Trigger a UART interrupt service request.\n\n
 508:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * When the UART service request is triggered, the NVIC interrupt associated with it will be
 509:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * generated if enabled.
 510:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 511:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 512:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SelectInterruptNodePointer() \n\n\n
 513:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 514:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
 515:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 516:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 517:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 518:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 519:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 520:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 521:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 522:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return Status of UART channel events. \n 
 523:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 524:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 525:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 526:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 527:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 528:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides the status of UART channel events.\n\n
 529:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Status provided by the API represents the status of multiple events at their bit positions. The 
 530:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * obtained using the enumeration XMC_UART_CH_STATUS_FLAG_t. Event status is obtained by reading
 531:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * the register PSR_ASCMode.
 532:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 533:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 534:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent(),  XMC_UART_CH_ClearStatusFlag()\n\n\n
 535:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 536:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE uint32_t XMC_UART_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 537:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 106              	 .loc 2 537 0
 107              	 .cfi_startproc
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 538:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   return channel->PSR_ASCMode;
 120              	 .loc 2 538 0
 121 0008 7B68     	 ldr r3,[r7,#4]
 122 000a 9B6C     	 ldr r3,[r3,#72]
 539:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 123              	 .loc 2 539 0
 124 000c 181C     	 mov r0,r3
 125 000e BD46     	 mov sp,r7
 126 0010 02B0     	 add sp,sp,#8
 127              	 
 128 0012 80BD     	 pop {r7,pc}
 129              	 .cfi_endproc
 130              	.LFE126:
 132              	 .section .text.XMC_UART_CH_ClearStatusFlag,"ax",%progbits
 133              	 .align 2
 134              	 .code 16
 135              	 .thumb_func
 137              	XMC_UART_CH_ClearStatusFlag:
 138              	.LFB127:
 540:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** 
 541:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** /**
 542:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 543:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 544:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @param flag UART events to be cleared. \n
 545:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 546:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 547:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 548:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 549:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 550:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 551:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Clears the status of UART channel events.\n\n
 552:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 553:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_STATUS_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as 
 554:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are cleared by setting the bitmask to the PSCR register.
 555:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  *
 556:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 557:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(),  XMC_UART_CH_GetStatusFlag()\n\n\n
 558:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****  */
 559:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 560:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** {
 139              	 .loc 2 560 0
 140              	 .cfi_startproc
 141 0000 80B5     	 push {r7,lr}
 142              	.LCFI9:
 143              	 .cfi_def_cfa_offset 8
 144              	 .cfi_offset 7,-8
 145              	 .cfi_offset 14,-4
 146 0002 82B0     	 sub sp,sp,#8
 147              	.LCFI10:
 148              	 .cfi_def_cfa_offset 16
 149 0004 00AF     	 add r7,sp,#0
 150              	.LCFI11:
 151              	 .cfi_def_cfa_register 7
 152 0006 7860     	 str r0,[r7,#4]
 153 0008 3960     	 str r1,[r7]
 561:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PSCR = flag;
 154              	 .loc 2 561 0
 155 000a 7B68     	 ldr r3,[r7,#4]
 156 000c 3A68     	 ldr r2,[r7]
 157 000e DA64     	 str r2,[r3,#76]
 562:C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/XMCLib/inc\xmc_uart.h **** }
 158              	 .loc 2 562 0
 159 0010 BD46     	 mov sp,r7
 160 0012 02B0     	 add sp,sp,#8
 161              	 
 162 0014 80BD     	 pop {r7,pc}
 163              	 .cfi_endproc
 164              	.LFE127:
 166 0016 C046     	 .section .text.XMC_UART_CH_Init,"ax",%progbits
 167              	 .align 2
 168              	 .global XMC_UART_CH_Init
 169              	 .code 16
 170              	 .thumb_func
 172              	XMC_UART_CH_Init:
 173              	.LFB142:
 174              	 .file 3 "../Libraries/XMCLib/src/xmc_uart.c"
   1:../Libraries/XMCLib/src/xmc_uart.c **** /**
   2:../Libraries/XMCLib/src/xmc_uart.c ****  * @file xmc_uart.c
   3:../Libraries/XMCLib/src/xmc_uart.c ****  * @date 2016-07-22
   4:../Libraries/XMCLib/src/xmc_uart.c ****  *
   5:../Libraries/XMCLib/src/xmc_uart.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_uart.c ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_uart.c ****  *
   9:../Libraries/XMCLib/src/xmc_uart.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_uart.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_uart.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_uart.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_uart.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_uart.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_uart.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_uart.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_uart.c ****  * 
  18:../Libraries/XMCLib/src/xmc_uart.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_uart.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_uart.c ****  * 
  21:../Libraries/XMCLib/src/xmc_uart.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_uart.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_uart.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_uart.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_uart.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_uart.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_uart.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_uart.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_uart.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_uart.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_uart.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_uart.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_uart.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_uart.c ****  *
  36:../Libraries/XMCLib/src/xmc_uart.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_uart.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_uart.c ****  *
  39:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_uart.c ****  *      
  42:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_uart.c ****  *     - xmc_uart_ch_stop API implementation corrected.
  44:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_Stop() API for not setting to IDLE the channel if it is busy <br>
  45:../Libraries/XMCLib/src/xmc_uart.c ****  *
  46:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Removed GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_uart.c ****  *
  49:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-09-01:
  50:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_EnableEvent() and XMC_UART_CH_DisableEvent() for supporting multiple 
  51:../Libraries/XMCLib/src/xmc_uart.c ****  * 
  52:../Libraries/XMCLib/src/xmc_uart.c ****  * 2016-07-22:
  53:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_Init() to enable transfer status BUSY
  54:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_Stop() to check for transfer status
  55:../Libraries/XMCLib/src/xmc_uart.c ****  *
  56:../Libraries/XMCLib/src/xmc_uart.c ****  * @endcond 
  57:../Libraries/XMCLib/src/xmc_uart.c ****  *
  58:../Libraries/XMCLib/src/xmc_uart.c ****  */
  59:../Libraries/XMCLib/src/xmc_uart.c **** 
  60:../Libraries/XMCLib/src/xmc_uart.c **** /**************************************************************************************************
  61:../Libraries/XMCLib/src/xmc_uart.c ****  * HEADER FILES
  62:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  63:../Libraries/XMCLib/src/xmc_uart.c **** 
  64:../Libraries/XMCLib/src/xmc_uart.c **** #include <xmc_scu.h>
  65:../Libraries/XMCLib/src/xmc_uart.c **** #include <xmc_uart.h>
  66:../Libraries/XMCLib/src/xmc_uart.c **** 
  67:../Libraries/XMCLib/src/xmc_uart.c **** /**************************************************************************************************
  68:../Libraries/XMCLib/src/xmc_uart.c ****  * MACROS
  69:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  70:../Libraries/XMCLib/src/xmc_uart.c ****  
  71:../Libraries/XMCLib/src/xmc_uart.c **** #define XMC_UART_CH_OVERSAMPLING (16UL)
  72:../Libraries/XMCLib/src/xmc_uart.c **** #define XMC_UART_CH_OVERSAMPLING_MIN_VAL (4UL)
  73:../Libraries/XMCLib/src/xmc_uart.c **** 
  74:../Libraries/XMCLib/src/xmc_uart.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_uart.c ****  * API IMPLEMENTATION
  76:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_uart.c **** 
  78:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_Init(XMC_USIC_CH_t *channel, const XMC_UART_CH_CONFIG_t *const config)
  79:../Libraries/XMCLib/src/xmc_uart.c **** {
 175              	 .loc 3 79 0
 176              	 .cfi_startproc
 177 0000 80B5     	 push {r7,lr}
 178              	.LCFI12:
 179              	 .cfi_def_cfa_offset 8
 180              	 .cfi_offset 7,-8
 181              	 .cfi_offset 14,-4
 182 0002 84B0     	 sub sp,sp,#16
 183              	.LCFI13:
 184              	 .cfi_def_cfa_offset 24
 185 0004 00AF     	 add r7,sp,#0
 186              	.LCFI14:
 187              	 .cfi_def_cfa_register 7
 188 0006 7860     	 str r0,[r7,#4]
 189 0008 3960     	 str r1,[r7]
  80:../Libraries/XMCLib/src/xmc_uart.c ****   uint32_t oversampling = XMC_UART_CH_OVERSAMPLING;
 190              	 .loc 3 80 0
 191 000a 1023     	 mov r3,#16
 192 000c FB60     	 str r3,[r7,#12]
  81:../Libraries/XMCLib/src/xmc_uart.c **** 
  82:../Libraries/XMCLib/src/xmc_uart.c ****   /* USIC channel switched on*/
  83:../Libraries/XMCLib/src/xmc_uart.c ****   XMC_USIC_CH_Enable(channel);
 193              	 .loc 3 83 0
 194 000e 7B68     	 ldr r3,[r7,#4]
 195 0010 181C     	 mov r0,r3
 196 0012 FFF7FEFF 	 bl XMC_USIC_CH_Enable
  84:../Libraries/XMCLib/src/xmc_uart.c ****   
  85:../Libraries/XMCLib/src/xmc_uart.c ****   if(config->oversampling != 0U)
 197              	 .loc 3 85 0
 198 0016 3B68     	 ldr r3,[r7]
 199 0018 DB79     	 ldrb r3,[r3,#7]
 200 001a 002B     	 cmp r3,#0
 201 001c 02D0     	 beq .L8
  86:../Libraries/XMCLib/src/xmc_uart.c ****   {
  87:../Libraries/XMCLib/src/xmc_uart.c ****     oversampling = (uint32_t)config->oversampling;
 202              	 .loc 3 87 0
 203 001e 3B68     	 ldr r3,[r7]
 204 0020 DB79     	 ldrb r3,[r3,#7]
 205 0022 FB60     	 str r3,[r7,#12]
 206              	.L8:
  88:../Libraries/XMCLib/src/xmc_uart.c ****   }
  89:../Libraries/XMCLib/src/xmc_uart.c ****   
  90:../Libraries/XMCLib/src/xmc_uart.c ****   /* Configure baud rate */
  91:../Libraries/XMCLib/src/xmc_uart.c ****   (void)XMC_USIC_CH_SetBaudrate(channel, config->baudrate, oversampling);
 207              	 .loc 3 91 0
 208 0024 3B68     	 ldr r3,[r7]
 209 0026 1A68     	 ldr r2,[r3]
 210 0028 7968     	 ldr r1,[r7,#4]
 211 002a FB68     	 ldr r3,[r7,#12]
 212 002c 081C     	 mov r0,r1
 213 002e 111C     	 mov r1,r2
 214 0030 1A1C     	 mov r2,r3
 215 0032 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
  92:../Libraries/XMCLib/src/xmc_uart.c ****   
  93:../Libraries/XMCLib/src/xmc_uart.c ****   /* Configure frame format
  94:../Libraries/XMCLib/src/xmc_uart.c ****    * Configure the number of stop bits
  95:../Libraries/XMCLib/src/xmc_uart.c ****    * Pulse length is set to 0 to have standard UART signaling, 
  96:../Libraries/XMCLib/src/xmc_uart.c ****    * i.e. the 0 level is signaled during the complete bit time
  97:../Libraries/XMCLib/src/xmc_uart.c ****    * Sampling point set equal to the half of the oversampling period
  98:../Libraries/XMCLib/src/xmc_uart.c ****    * Enable Sample Majority Decision 
  99:../Libraries/XMCLib/src/xmc_uart.c ****    * Enable Transfer Status BUSY
 100:../Libraries/XMCLib/src/xmc_uart.c ****    */
 101:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PCR_ASCMode = (uint32_t)(((config->stop_bits - 1UL) << USIC_CH_PCR_ASCMode_STPB_Pos) |
 216              	 .loc 3 101 0
 217 0036 3B68     	 ldr r3,[r7]
 218 0038 9B79     	 ldrb r3,[r3,#6]
 219 003a 013B     	 sub r3,r3,#1
 220 003c 5A00     	 lsl r2,r3,#1
 102:../Libraries/XMCLib/src/xmc_uart.c ****                                     (((oversampling >> 1UL) + 1UL) << USIC_CH_PCR_ASCMode_SP_Pos) |
 221              	 .loc 3 102 0
 222 003e FB68     	 ldr r3,[r7,#12]
 223 0040 5B08     	 lsr r3,r3,#1
 224 0042 0133     	 add r3,r3,#1
 225 0044 1B02     	 lsl r3,r3,#8
 101:../Libraries/XMCLib/src/xmc_uart.c ****                                     (((oversampling >> 1UL) + 1UL) << USIC_CH_PCR_ASCMode_SP_Pos) |
 226              	 .loc 3 101 0
 227 0046 1343     	 orr r3,r2
 228 0048 194A     	 ldr r2,.L11
 229 004a 1A43     	 orr r2,r3
 230 004c 7B68     	 ldr r3,[r7,#4]
 231 004e DA63     	 str r2,[r3,#60]
 103:../Libraries/XMCLib/src/xmc_uart.c ****                                     USIC_CH_PCR_ASCMode_SMD_Msk |
 104:../Libraries/XMCLib/src/xmc_uart.c ****                                     USIC_CH_PCR_ASCMode_RSTEN_Msk | USIC_CH_PCR_ASCMode_TSTEN_Msk);
 105:../Libraries/XMCLib/src/xmc_uart.c **** 
 106:../Libraries/XMCLib/src/xmc_uart.c ****   /* Set passive data level, high
 107:../Libraries/XMCLib/src/xmc_uart.c ****      Set word length. Data bits - 1
 108:../Libraries/XMCLib/src/xmc_uart.c ****      If frame length is > 0, frame_lemgth-1; else, FLE = WLE (Data bits - 1)
 109:../Libraries/XMCLib/src/xmc_uart.c ****      Transmission Mode: The shift control signal is considered active if it
 110:../Libraries/XMCLib/src/xmc_uart.c ****      is at 1-level. This is the setting to be programmed to allow data transfers */
 111:../Libraries/XMCLib/src/xmc_uart.c ****   channel->SCTR = (uint32_t)((((uint32_t)config->data_bits - 1UL) << USIC_CH_SCTR_WLE_Pos) |
 232              	 .loc 3 111 0
 233 0050 3B68     	 ldr r3,[r7]
 234 0052 1B79     	 ldrb r3,[r3,#4]
 235 0054 013B     	 sub r3,r3,#1
 236 0056 1B06     	 lsl r3,r3,#24
 237 0058 8122     	 mov r2,#129
 238 005a 5200     	 lsl r2,r2,#1
 239 005c 1A43     	 orr r2,r3
 240 005e 7B68     	 ldr r3,[r7,#4]
 241 0060 5A63     	 str r2,[r3,#52]
 112:../Libraries/XMCLib/src/xmc_uart.c ****                              ((0x1UL << USIC_CH_SCTR_TRM_Pos) | USIC_CH_SCTR_PDL_Msk));
 113:../Libraries/XMCLib/src/xmc_uart.c **** 
 114:../Libraries/XMCLib/src/xmc_uart.c ****   if (config->frame_length != 0U)
 242              	 .loc 3 114 0
 243 0062 3B68     	 ldr r3,[r7]
 244 0064 5B79     	 ldrb r3,[r3,#5]
 245 0066 002B     	 cmp r3,#0
 246 0068 09D0     	 beq .L9
 115:../Libraries/XMCLib/src/xmc_uart.c ****   {
 116:../Libraries/XMCLib/src/xmc_uart.c ****     channel->SCTR |= (uint32_t)(((uint32_t)config->frame_length - 1UL) << USIC_CH_SCTR_FLE_Pos);
 247              	 .loc 3 116 0
 248 006a 7B68     	 ldr r3,[r7,#4]
 249 006c 5A6B     	 ldr r2,[r3,#52]
 250 006e 3B68     	 ldr r3,[r7]
 251 0070 5B79     	 ldrb r3,[r3,#5]
 252 0072 013B     	 sub r3,r3,#1
 253 0074 1B04     	 lsl r3,r3,#16
 254 0076 1A43     	 orr r2,r3
 255 0078 7B68     	 ldr r3,[r7,#4]
 256 007a 5A63     	 str r2,[r3,#52]
 257 007c 08E0     	 b .L10
 258              	.L9:
 117:../Libraries/XMCLib/src/xmc_uart.c ****   }
 118:../Libraries/XMCLib/src/xmc_uart.c ****   else
 119:../Libraries/XMCLib/src/xmc_uart.c ****   {
 120:../Libraries/XMCLib/src/xmc_uart.c ****     channel->SCTR |= (uint32_t)(((uint32_t)config->data_bits - 1UL) << USIC_CH_SCTR_FLE_Pos);
 259              	 .loc 3 120 0
 260 007e 7B68     	 ldr r3,[r7,#4]
 261 0080 5A6B     	 ldr r2,[r3,#52]
 262 0082 3B68     	 ldr r3,[r7]
 263 0084 1B79     	 ldrb r3,[r3,#4]
 264 0086 013B     	 sub r3,r3,#1
 265 0088 1B04     	 lsl r3,r3,#16
 266 008a 1A43     	 orr r2,r3
 267 008c 7B68     	 ldr r3,[r7,#4]
 268 008e 5A63     	 str r2,[r3,#52]
 269              	.L10:
 121:../Libraries/XMCLib/src/xmc_uart.c ****   }
 122:../Libraries/XMCLib/src/xmc_uart.c **** 
 123:../Libraries/XMCLib/src/xmc_uart.c ****   /* Enable transfer buffer */
 124:../Libraries/XMCLib/src/xmc_uart.c ****   channel->TCSR = (0x1UL << USIC_CH_TCSR_TDEN_Pos) |
 270              	 .loc 3 124 0
 271 0090 7B68     	 ldr r3,[r7,#4]
 272 0092 A022     	 mov r2,#160
 273 0094 D200     	 lsl r2,r2,#3
 274 0096 9A63     	 str r2,[r3,#56]
 125:../Libraries/XMCLib/src/xmc_uart.c ****                   USIC_CH_TCSR_TDSSM_Msk;
 126:../Libraries/XMCLib/src/xmc_uart.c **** 
 127:../Libraries/XMCLib/src/xmc_uart.c ****   /* Clear protocol status */
 128:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PSCR = 0xFFFFFFFFUL;
 275              	 .loc 3 128 0
 276 0098 7B68     	 ldr r3,[r7,#4]
 277 009a 0122     	 mov r2,#1
 278 009c 5242     	 neg r2,r2
 279 009e DA64     	 str r2,[r3,#76]
 129:../Libraries/XMCLib/src/xmc_uart.c **** 
 130:../Libraries/XMCLib/src/xmc_uart.c ****   /* Set parity settings */
 131:../Libraries/XMCLib/src/xmc_uart.c ****   channel->CCR = (uint32_t)config->parity_mode;
 280              	 .loc 3 131 0
 281 00a0 3B68     	 ldr r3,[r7]
 282 00a2 1B89     	 ldrh r3,[r3,#8]
 283 00a4 1A1C     	 mov r2,r3
 284 00a6 7B68     	 ldr r3,[r7,#4]
 285 00a8 1A64     	 str r2,[r3,#64]
 132:../Libraries/XMCLib/src/xmc_uart.c **** }
 286              	 .loc 3 132 0
 287 00aa BD46     	 mov sp,r7
 288 00ac 04B0     	 add sp,sp,#16
 289              	 
 290 00ae 80BD     	 pop {r7,pc}
 291              	.L12:
 292              	 .align 2
 293              	.L11:
 294 00b0 01000300 	 .word 196609
 295              	 .cfi_endproc
 296              	.LFE142:
 298              	 .section .text.XMC_UART_CH_SetBaudrate,"ax",%progbits
 299              	 .align 2
 300              	 .global XMC_UART_CH_SetBaudrate
 301              	 .code 16
 302              	 .thumb_func
 304              	XMC_UART_CH_SetBaudrate:
 305              	.LFB143:
 133:../Libraries/XMCLib/src/xmc_uart.c **** 
 134:../Libraries/XMCLib/src/xmc_uart.c **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 135:../Libraries/XMCLib/src/xmc_uart.c **** {
 306              	 .loc 3 135 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI15:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 86B0     	 sub sp,sp,#24
 314              	.LCFI16:
 315              	 .cfi_def_cfa_offset 32
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI17:
 318              	 .cfi_def_cfa_register 7
 319 0006 F860     	 str r0,[r7,#12]
 320 0008 B960     	 str r1,[r7,#8]
 321 000a 7A60     	 str r2,[r7,#4]
 136:../Libraries/XMCLib/src/xmc_uart.c ****   XMC_UART_CH_STATUS_t status;
 137:../Libraries/XMCLib/src/xmc_uart.c ****   
 138:../Libraries/XMCLib/src/xmc_uart.c ****   status = XMC_UART_CH_STATUS_ERROR;
 322              	 .loc 3 138 0
 323 000c 1723     	 mov r3,#23
 324 000e FB18     	 add r3,r7,r3
 325 0010 0122     	 mov r2,#1
 326 0012 1A70     	 strb r2,[r3]
 139:../Libraries/XMCLib/src/xmc_uart.c ****   
 140:../Libraries/XMCLib/src/xmc_uart.c ****   if ((rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 2U)) && (oversampling >= XMC_UART_CH
 327              	 .loc 3 140 0
 328 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 329 0018 031C     	 mov r3,r0
 330 001a 9A08     	 lsr r2,r3,#2
 331 001c BB68     	 ldr r3,[r7,#8]
 332 001e 9A42     	 cmp r2,r3
 333 0020 10D3     	 bcc .L14
 334              	 .loc 3 140 0 is_stmt 0 discriminator 1
 335 0022 7B68     	 ldr r3,[r7,#4]
 336 0024 032B     	 cmp r3,#3
 337 0026 0DD9     	 bls .L14
 141:../Libraries/XMCLib/src/xmc_uart.c ****   {
 142:../Libraries/XMCLib/src/xmc_uart.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, oversampling) == XMC_USIC_CH_STATUS_OK)
 338              	 .loc 3 142 0 is_stmt 1
 339 0028 F968     	 ldr r1,[r7,#12]
 340 002a BA68     	 ldr r2,[r7,#8]
 341 002c 7B68     	 ldr r3,[r7,#4]
 342 002e 081C     	 mov r0,r1
 343 0030 111C     	 mov r1,r2
 344 0032 1A1C     	 mov r2,r3
 345 0034 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 346 0038 031E     	 sub r3,r0,#0
 347 003a 03D1     	 bne .L14
 143:../Libraries/XMCLib/src/xmc_uart.c ****     {
 144:../Libraries/XMCLib/src/xmc_uart.c ****       status = XMC_UART_CH_STATUS_OK;
 348              	 .loc 3 144 0
 349 003c 1723     	 mov r3,#23
 350 003e FB18     	 add r3,r7,r3
 351 0040 0022     	 mov r2,#0
 352 0042 1A70     	 strb r2,[r3]
 353              	.L14:
 145:../Libraries/XMCLib/src/xmc_uart.c ****     }
 146:../Libraries/XMCLib/src/xmc_uart.c ****   } 
 147:../Libraries/XMCLib/src/xmc_uart.c ****   return status;
 354              	 .loc 3 147 0
 355 0044 1723     	 mov r3,#23
 356 0046 FB18     	 add r3,r7,r3
 357 0048 1B78     	 ldrb r3,[r3]
 148:../Libraries/XMCLib/src/xmc_uart.c **** }
 358              	 .loc 3 148 0
 359 004a 181C     	 mov r0,r3
 360 004c BD46     	 mov sp,r7
 361 004e 06B0     	 add sp,sp,#24
 362              	 
 363 0050 80BD     	 pop {r7,pc}
 364              	 .cfi_endproc
 365              	.LFE143:
 367 0052 C046     	 .section .text.XMC_UART_CH_Transmit,"ax",%progbits
 368              	 .align 2
 369              	 .global XMC_UART_CH_Transmit
 370              	 .code 16
 371              	 .thumb_func
 373              	XMC_UART_CH_Transmit:
 374              	.LFB144:
 149:../Libraries/XMCLib/src/xmc_uart.c **** 
 150:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data)
 151:../Libraries/XMCLib/src/xmc_uart.c **** {
 375              	 .loc 3 151 0
 376              	 .cfi_startproc
 377 0000 80B5     	 push {r7,lr}
 378              	.LCFI18:
 379              	 .cfi_def_cfa_offset 8
 380              	 .cfi_offset 7,-8
 381              	 .cfi_offset 14,-4
 382 0002 82B0     	 sub sp,sp,#8
 383              	.LCFI19:
 384              	 .cfi_def_cfa_offset 16
 385 0004 00AF     	 add r7,sp,#0
 386              	.LCFI20:
 387              	 .cfi_def_cfa_register 7
 388 0006 7860     	 str r0,[r7,#4]
 389 0008 0A1C     	 mov r2,r1
 390 000a BB1C     	 add r3,r7,#2
 391 000c 1A80     	 strh r2,[r3]
 152:../Libraries/XMCLib/src/xmc_uart.c ****   /* Check FIFO size */
 153:../Libraries/XMCLib/src/xmc_uart.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0UL)
 392              	 .loc 3 153 0
 393 000e 7A68     	 ldr r2,[r7,#4]
 394 0010 8423     	 mov r3,#132
 395 0012 5B00     	 lsl r3,r3,#1
 396 0014 D258     	 ldr r2,[r2,r3]
 397 0016 E023     	 mov r3,#224
 398 0018 DB04     	 lsl r3,r3,#19
 399 001a 1340     	 and r3,r2
 400 001c 14D1     	 bne .L17
 154:../Libraries/XMCLib/src/xmc_uart.c ****   {
 155:../Libraries/XMCLib/src/xmc_uart.c ****     /* Wait till the Transmit Buffer is free for transmission */
 156:../Libraries/XMCLib/src/xmc_uart.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 401              	 .loc 3 156 0
 402 001e C046     	 mov r8,r8
 403              	.L18:
 404              	 .loc 3 156 0 is_stmt 0 discriminator 1
 405 0020 7B68     	 ldr r3,[r7,#4]
 406 0022 181C     	 mov r0,r3
 407 0024 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 408 0028 031E     	 sub r3,r0,#0
 409 002a 802B     	 cmp r3,#128
 410 002c F8D0     	 beq .L18
 157:../Libraries/XMCLib/src/xmc_uart.c ****     {
 158:../Libraries/XMCLib/src/xmc_uart.c ****     }
 159:../Libraries/XMCLib/src/xmc_uart.c ****   
 160:../Libraries/XMCLib/src/xmc_uart.c ****     /* Clear the Transmit Buffer indication flag */
 161:../Libraries/XMCLib/src/xmc_uart.c ****     XMC_UART_CH_ClearStatusFlag(channel, (uint32_t)XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATI
 411              	 .loc 3 161 0 is_stmt 1
 412 002e 7A68     	 ldr r2,[r7,#4]
 413 0030 8023     	 mov r3,#128
 414 0032 9B01     	 lsl r3,r3,#6
 415 0034 101C     	 mov r0,r2
 416 0036 191C     	 mov r1,r3
 417 0038 FFF7FEFF 	 bl XMC_UART_CH_ClearStatusFlag
 162:../Libraries/XMCLib/src/xmc_uart.c ****   
 163:../Libraries/XMCLib/src/xmc_uart.c ****     /*Transmit data */
 164:../Libraries/XMCLib/src/xmc_uart.c ****     channel->TBUF[0U] = data;
 418              	 .loc 3 164 0
 419 003c BB1C     	 add r3,r7,#2
 420 003e 1A88     	 ldrh r2,[r3]
 421 0040 7B68     	 ldr r3,[r7,#4]
 422 0042 8021     	 mov r1,#128
 423 0044 5A50     	 str r2,[r3,r1]
 424 0046 05E0     	 b .L16
 425              	.L17:
 165:../Libraries/XMCLib/src/xmc_uart.c ****   }
 166:../Libraries/XMCLib/src/xmc_uart.c ****   else
 167:../Libraries/XMCLib/src/xmc_uart.c ****   {
 168:../Libraries/XMCLib/src/xmc_uart.c ****     channel->IN[0U] = data;
 426              	 .loc 3 168 0
 427 0048 BB1C     	 add r3,r7,#2
 428 004a 1988     	 ldrh r1,[r3]
 429 004c 7A68     	 ldr r2,[r7,#4]
 430 004e C023     	 mov r3,#192
 431 0050 5B00     	 lsl r3,r3,#1
 432 0052 D150     	 str r1,[r2,r3]
 433              	.L16:
 169:../Libraries/XMCLib/src/xmc_uart.c ****   }
 170:../Libraries/XMCLib/src/xmc_uart.c **** }
 434              	 .loc 3 170 0
 435 0054 BD46     	 mov sp,r7
 436 0056 02B0     	 add sp,sp,#8
 437              	 
 438 0058 80BD     	 pop {r7,pc}
 439              	 .cfi_endproc
 440              	.LFE144:
 442 005a C046     	 .section .text.XMC_UART_CH_GetReceivedData,"ax",%progbits
 443              	 .align 2
 444              	 .global XMC_UART_CH_GetReceivedData
 445              	 .code 16
 446              	 .thumb_func
 448              	XMC_UART_CH_GetReceivedData:
 449              	.LFB145:
 171:../Libraries/XMCLib/src/xmc_uart.c **** 
 172:../Libraries/XMCLib/src/xmc_uart.c **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel)
 173:../Libraries/XMCLib/src/xmc_uart.c **** {
 450              	 .loc 3 173 0
 451              	 .cfi_startproc
 452 0000 80B5     	 push {r7,lr}
 453              	.LCFI21:
 454              	 .cfi_def_cfa_offset 8
 455              	 .cfi_offset 7,-8
 456              	 .cfi_offset 14,-4
 457 0002 84B0     	 sub sp,sp,#16
 458              	.LCFI22:
 459              	 .cfi_def_cfa_offset 24
 460 0004 00AF     	 add r7,sp,#0
 461              	.LCFI23:
 462              	 .cfi_def_cfa_register 7
 463 0006 7860     	 str r0,[r7,#4]
 174:../Libraries/XMCLib/src/xmc_uart.c ****   uint16_t retval;
 175:../Libraries/XMCLib/src/xmc_uart.c **** 
 176:../Libraries/XMCLib/src/xmc_uart.c ****   /* Check FIFO size */
 177:../Libraries/XMCLib/src/xmc_uart.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 464              	 .loc 3 177 0
 465 0008 7A68     	 ldr r2,[r7,#4]
 466 000a 8623     	 mov r3,#134
 467 000c 5B00     	 lsl r3,r3,#1
 468 000e D258     	 ldr r2,[r2,r3]
 469 0010 E023     	 mov r3,#224
 470 0012 DB04     	 lsl r3,r3,#19
 471 0014 1340     	 and r3,r2
 472 0016 05D1     	 bne .L21
 178:../Libraries/XMCLib/src/xmc_uart.c ****   {
 179:../Libraries/XMCLib/src/xmc_uart.c ****     retval = (uint16_t)channel->RBUF;
 473              	 .loc 3 179 0
 474 0018 7B68     	 ldr r3,[r7,#4]
 475 001a 5A6D     	 ldr r2,[r3,#84]
 476 001c 0E23     	 mov r3,#14
 477 001e FB18     	 add r3,r7,r3
 478 0020 1A80     	 strh r2,[r3]
 479 0022 06E0     	 b .L22
 480              	.L21:
 180:../Libraries/XMCLib/src/xmc_uart.c ****   }
 181:../Libraries/XMCLib/src/xmc_uart.c ****   else
 182:../Libraries/XMCLib/src/xmc_uart.c ****   {
 183:../Libraries/XMCLib/src/xmc_uart.c ****     retval = (uint16_t)channel->OUTR;
 481              	 .loc 3 183 0
 482 0024 7A68     	 ldr r2,[r7,#4]
 483 0026 8E23     	 mov r3,#142
 484 0028 5B00     	 lsl r3,r3,#1
 485 002a D258     	 ldr r2,[r2,r3]
 486 002c 0E23     	 mov r3,#14
 487 002e FB18     	 add r3,r7,r3
 488 0030 1A80     	 strh r2,[r3]
 489              	.L22:
 184:../Libraries/XMCLib/src/xmc_uart.c ****   }
 185:../Libraries/XMCLib/src/xmc_uart.c **** 
 186:../Libraries/XMCLib/src/xmc_uart.c ****   return retval;
 490              	 .loc 3 186 0
 491 0032 0E23     	 mov r3,#14
 492 0034 FB18     	 add r3,r7,r3
 493 0036 1B88     	 ldrh r3,[r3]
 187:../Libraries/XMCLib/src/xmc_uart.c **** }
 494              	 .loc 3 187 0
 495 0038 181C     	 mov r0,r3
 496 003a BD46     	 mov sp,r7
 497 003c 04B0     	 add sp,sp,#16
 498              	 
 499 003e 80BD     	 pop {r7,pc}
 500              	 .cfi_endproc
 501              	.LFE145:
 503              	 .section .text.XMC_UART_CH_Stop,"ax",%progbits
 504              	 .align 2
 505              	 .global XMC_UART_CH_Stop
 506              	 .code 16
 507              	 .thumb_func
 509              	XMC_UART_CH_Stop:
 510              	.LFB146:
 188:../Libraries/XMCLib/src/xmc_uart.c **** 
 189:../Libraries/XMCLib/src/xmc_uart.c **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel)
 190:../Libraries/XMCLib/src/xmc_uart.c **** {
 511              	 .loc 3 190 0
 512              	 .cfi_startproc
 513 0000 80B5     	 push {r7,lr}
 514              	.LCFI24:
 515              	 .cfi_def_cfa_offset 8
 516              	 .cfi_offset 7,-8
 517              	 .cfi_offset 14,-4
 518 0002 84B0     	 sub sp,sp,#16
 519              	.LCFI25:
 520              	 .cfi_def_cfa_offset 24
 521 0004 00AF     	 add r7,sp,#0
 522              	.LCFI26:
 523              	 .cfi_def_cfa_register 7
 524 0006 7860     	 str r0,[r7,#4]
 191:../Libraries/XMCLib/src/xmc_uart.c ****   XMC_UART_CH_STATUS_t status = XMC_UART_CH_STATUS_OK;
 525              	 .loc 3 191 0
 526 0008 0F23     	 mov r3,#15
 527 000a FB18     	 add r3,r7,r3
 528 000c 0022     	 mov r2,#0
 529 000e 1A70     	 strb r2,[r3]
 192:../Libraries/XMCLib/src/xmc_uart.c **** 
 193:../Libraries/XMCLib/src/xmc_uart.c ****   if (((XMC_USIC_CH_GetTransmitBufferStatus(channel) & (uint32_t) XMC_USIC_CH_TBUF_STATUS_BUSY) != 
 530              	 .loc 3 193 0
 531 0010 7B68     	 ldr r3,[r7,#4]
 532 0012 181C     	 mov r0,r3
 533 0014 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 534 0018 031C     	 mov r3,r0
 535 001a DBB2     	 uxtb r3,r3
 536 001c 5BB2     	 sxtb r3,r3
 537 001e 002B     	 cmp r3,#0
 538 0020 08DB     	 blt .L25
 194:../Libraries/XMCLib/src/xmc_uart.c ****       ((XMC_UART_CH_GetStatusFlag(channel) & XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY) != 0))
 539              	 .loc 3 194 0 discriminator 1
 540 0022 7B68     	 ldr r3,[r7,#4]
 541 0024 181C     	 mov r0,r3
 542 0026 FFF7FEFF 	 bl XMC_UART_CH_GetStatusFlag
 543 002a 021C     	 mov r2,r0
 544 002c 8023     	 mov r3,#128
 545 002e 9B00     	 lsl r3,r3,#2
 546 0030 1340     	 and r3,r2
 193:../Libraries/XMCLib/src/xmc_uart.c ****       ((XMC_UART_CH_GetStatusFlag(channel) & XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY) != 0))
 547              	 .loc 3 193 0 discriminator 1
 548 0032 04D0     	 beq .L26
 549              	.L25:
 195:../Libraries/XMCLib/src/xmc_uart.c ****   {
 196:../Libraries/XMCLib/src/xmc_uart.c ****     status = XMC_UART_CH_STATUS_BUSY;
 550              	 .loc 3 196 0
 551 0034 0F23     	 mov r3,#15
 552 0036 FB18     	 add r3,r7,r3
 553 0038 0222     	 mov r2,#2
 554 003a 1A70     	 strb r2,[r3]
 555 003c 04E0     	 b .L27
 556              	.L26:
 197:../Libraries/XMCLib/src/xmc_uart.c ****   }
 198:../Libraries/XMCLib/src/xmc_uart.c ****   else
 199:../Libraries/XMCLib/src/xmc_uart.c ****   {
 200:../Libraries/XMCLib/src/xmc_uart.c ****     /* USIC channel in IDLE mode */
 201:../Libraries/XMCLib/src/xmc_uart.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 557              	 .loc 3 201 0
 558 003e 7B68     	 ldr r3,[r7,#4]
 559 0040 181C     	 mov r0,r3
 560 0042 0021     	 mov r1,#0
 561 0044 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 562              	.L27:
 202:../Libraries/XMCLib/src/xmc_uart.c ****   }
 203:../Libraries/XMCLib/src/xmc_uart.c ****   return status;
 563              	 .loc 3 203 0
 564 0048 0F23     	 mov r3,#15
 565 004a FB18     	 add r3,r7,r3
 566 004c 1B78     	 ldrb r3,[r3]
 204:../Libraries/XMCLib/src/xmc_uart.c **** }
 567              	 .loc 3 204 0
 568 004e 181C     	 mov r0,r3
 569 0050 BD46     	 mov sp,r7
 570 0052 04B0     	 add sp,sp,#16
 571              	 
 572 0054 80BD     	 pop {r7,pc}
 573              	 .cfi_endproc
 574              	.LFE146:
 576 0056 C046     	 .section .text.XMC_UART_CH_EnableEvent,"ax",%progbits
 577              	 .align 2
 578              	 .global XMC_UART_CH_EnableEvent
 579              	 .code 16
 580              	 .thumb_func
 582              	XMC_UART_CH_EnableEvent:
 583              	.LFB147:
 205:../Libraries/XMCLib/src/xmc_uart.c **** 
 206:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 207:../Libraries/XMCLib/src/xmc_uart.c **** {
 584              	 .loc 3 207 0
 585              	 .cfi_startproc
 586 0000 80B5     	 push {r7,lr}
 587              	.LCFI27:
 588              	 .cfi_def_cfa_offset 8
 589              	 .cfi_offset 7,-8
 590              	 .cfi_offset 14,-4
 591 0002 82B0     	 sub sp,sp,#8
 592              	.LCFI28:
 593              	 .cfi_def_cfa_offset 16
 594 0004 00AF     	 add r7,sp,#0
 595              	.LCFI29:
 596              	 .cfi_def_cfa_register 7
 597 0006 7860     	 str r0,[r7,#4]
 598 0008 3960     	 str r1,[r7]
 208:../Libraries/XMCLib/src/xmc_uart.c ****   channel->CCR |= (event&0x1fc00U);
 599              	 .loc 3 208 0
 600 000a 7B68     	 ldr r3,[r7,#4]
 601 000c 1A6C     	 ldr r2,[r3,#64]
 602 000e 3968     	 ldr r1,[r7]
 603 0010 FE23     	 mov r3,#254
 604 0012 5B02     	 lsl r3,r3,#9
 605 0014 0B40     	 and r3,r1
 606 0016 1A43     	 orr r2,r3
 607 0018 7B68     	 ldr r3,[r7,#4]
 608 001a 1A64     	 str r2,[r3,#64]
 209:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PCR_ASCMode |= (event&0xf8U);
 609              	 .loc 3 209 0
 610 001c 7B68     	 ldr r3,[r7,#4]
 611 001e DA6B     	 ldr r2,[r3,#60]
 612 0020 3B68     	 ldr r3,[r7]
 613 0022 F821     	 mov r1,#248
 614 0024 0B40     	 and r3,r1
 615 0026 1A43     	 orr r2,r3
 616 0028 7B68     	 ldr r3,[r7,#4]
 617 002a DA63     	 str r2,[r3,#60]
 210:../Libraries/XMCLib/src/xmc_uart.c **** }
 618              	 .loc 3 210 0
 619 002c BD46     	 mov sp,r7
 620 002e 02B0     	 add sp,sp,#8
 621              	 
 622 0030 80BD     	 pop {r7,pc}
 623              	 .cfi_endproc
 624              	.LFE147:
 626 0032 C046     	 .section .text.XMC_UART_CH_DisableEvent,"ax",%progbits
 627              	 .align 2
 628              	 .global XMC_UART_CH_DisableEvent
 629              	 .code 16
 630              	 .thumb_func
 632              	XMC_UART_CH_DisableEvent:
 633              	.LFB148:
 211:../Libraries/XMCLib/src/xmc_uart.c **** 
 212:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 213:../Libraries/XMCLib/src/xmc_uart.c **** {
 634              	 .loc 3 213 0
 635              	 .cfi_startproc
 636 0000 80B5     	 push {r7,lr}
 637              	.LCFI30:
 638              	 .cfi_def_cfa_offset 8
 639              	 .cfi_offset 7,-8
 640              	 .cfi_offset 14,-4
 641 0002 82B0     	 sub sp,sp,#8
 642              	.LCFI31:
 643              	 .cfi_def_cfa_offset 16
 644 0004 00AF     	 add r7,sp,#0
 645              	.LCFI32:
 646              	 .cfi_def_cfa_register 7
 647 0006 7860     	 str r0,[r7,#4]
 648 0008 3960     	 str r1,[r7]
 214:../Libraries/XMCLib/src/xmc_uart.c ****   channel->CCR &= (uint32_t)~(event&0x1fc00U);
 649              	 .loc 3 214 0
 650 000a 7B68     	 ldr r3,[r7,#4]
 651 000c 1B6C     	 ldr r3,[r3,#64]
 652 000e 3968     	 ldr r1,[r7]
 653 0010 FE22     	 mov r2,#254
 654 0012 5202     	 lsl r2,r2,#9
 655 0014 0A40     	 and r2,r1
 656 0016 D243     	 mvn r2,r2
 657 0018 1A40     	 and r2,r3
 658 001a 7B68     	 ldr r3,[r7,#4]
 659 001c 1A64     	 str r2,[r3,#64]
 215:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PCR_ASCMode &= (uint32_t)~(event&0xf8U);
 660              	 .loc 3 215 0
 661 001e 7B68     	 ldr r3,[r7,#4]
 662 0020 DB6B     	 ldr r3,[r3,#60]
 663 0022 3A68     	 ldr r2,[r7]
 664 0024 F821     	 mov r1,#248
 665 0026 0A40     	 and r2,r1
 666 0028 D243     	 mvn r2,r2
 667 002a 1A40     	 and r2,r3
 668 002c 7B68     	 ldr r3,[r7,#4]
 669 002e DA63     	 str r2,[r3,#60]
 216:../Libraries/XMCLib/src/xmc_uart.c **** }
 670              	 .loc 3 216 0
 671 0030 BD46     	 mov sp,r7
 672 0032 02B0     	 add sp,sp,#8
 673              	 
 674 0034 80BD     	 pop {r7,pc}
 675              	 .cfi_endproc
 676              	.LFE148:
 678 0036 C046     	 .text
 679              	.Letext0:
 680              	 .file 4 "c:\\users\\follower\\downloads\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 681              	 .file 5 "c:\\users\\follower\\downloads\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 682              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/JuFo/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_uart.c
    {standard input}:18     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:56     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:60     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:99     .text.XMC_UART_CH_GetStatusFlag:00000000 $t
    {standard input}:103    .text.XMC_UART_CH_GetStatusFlag:00000000 XMC_UART_CH_GetStatusFlag
    {standard input}:133    .text.XMC_UART_CH_ClearStatusFlag:00000000 $t
    {standard input}:137    .text.XMC_UART_CH_ClearStatusFlag:00000000 XMC_UART_CH_ClearStatusFlag
    {standard input}:167    .text.XMC_UART_CH_Init:00000000 $t
    {standard input}:172    .text.XMC_UART_CH_Init:00000000 XMC_UART_CH_Init
    {standard input}:294    .text.XMC_UART_CH_Init:000000b0 $d
    {standard input}:299    .text.XMC_UART_CH_SetBaudrate:00000000 $t
    {standard input}:304    .text.XMC_UART_CH_SetBaudrate:00000000 XMC_UART_CH_SetBaudrate
    {standard input}:368    .text.XMC_UART_CH_Transmit:00000000 $t
    {standard input}:373    .text.XMC_UART_CH_Transmit:00000000 XMC_UART_CH_Transmit
    {standard input}:443    .text.XMC_UART_CH_GetReceivedData:00000000 $t
    {standard input}:448    .text.XMC_UART_CH_GetReceivedData:00000000 XMC_UART_CH_GetReceivedData
    {standard input}:504    .text.XMC_UART_CH_Stop:00000000 $t
    {standard input}:509    .text.XMC_UART_CH_Stop:00000000 XMC_UART_CH_Stop
    {standard input}:577    .text.XMC_UART_CH_EnableEvent:00000000 $t
    {standard input}:582    .text.XMC_UART_CH_EnableEvent:00000000 XMC_UART_CH_EnableEvent
    {standard input}:627    .text.XMC_UART_CH_DisableEvent:00000000 $t
    {standard input}:632    .text.XMC_UART_CH_DisableEvent:00000000 XMC_UART_CH_DisableEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrate
XMC_SCU_CLOCK_GetPeripheralClockFrequency
