   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_usic.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  23              	.LFB55:
  24              	 .file 1 "C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2017-09-08
   4:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  84:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
  86:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
  87:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  88:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  89:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  90:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  91:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  92:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  94:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
  95:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
  96:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  97:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  98:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
  99:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 100:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 101:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 102:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 103:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 104:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 105:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 106:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 107:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 108:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 109:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 110:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 111:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 112:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 113:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 114:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 115:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 116:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 117:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 118:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 119:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 120:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 121:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 122:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 123:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 124:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 125:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 126:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 127:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 129:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 130:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 131:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 132:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 133:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 134:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 135:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 136:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 137:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 139:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 140:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 141:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 142:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 145:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 146:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 147:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 148:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 149:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 150:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 151:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 152:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 153:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 154:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 155:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 157:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 158:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 159:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 161:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 162:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 163:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 164:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 165:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 166:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 167:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 168:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 169:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 170:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 171:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 172:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 173:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 174:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 175:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 176:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 177:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 178:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 179:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 180:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 181:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 182:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 183:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 184:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 185:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 186:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 187:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 188:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 189:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 190:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 191:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 192:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 193:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 194:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 195:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 196:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 197:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 198:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 199:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 200:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 201:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 202:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 203:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 204:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 205:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 206:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 207:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 208:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 209:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 210:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 211:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 212:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 213:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 214:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 215:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 216:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 217:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 218:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 219:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 220:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 221:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 222:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 225:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 227:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 229:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 230:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 231:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 232:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 233:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 234:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 235:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 236:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 237:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 238:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 239:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 240:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 241:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 242:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 243:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 244:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 245:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 246:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 247:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 248:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 249:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 250:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 251:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 252:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 253:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 254:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 255:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 256:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 257:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 258:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 259:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 260:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 261:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 262:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 263:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 264:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 265:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 266:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 267:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 268:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 269:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 270:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 271:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 272:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 273:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 274:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 275:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 276:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 277:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 278:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 279:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 280:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 281:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 282:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 283:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 284:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 285:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 286:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 287:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 288:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 289:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 290:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 291:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 292:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 295:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 297:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 299:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 300:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 301:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 303:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 304:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 305:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 306:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 307:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 308:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 309:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 310:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 311:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 312:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 315:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 317:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 319:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 320:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 321:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 324:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 326:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 328:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 329:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 330:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 333:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 335:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 337:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 338:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 339:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 340:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 341:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 342:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 343:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 344:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 345:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 346:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 347:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 348:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 349:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 350:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 351:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 352:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 353:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 356:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 358:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 360:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 361:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 362:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 365:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 367:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 369:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 370:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 371:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 374:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 376:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 378:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 379:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 380:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 383:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 385:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 387:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 388:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 389:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 390:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 393:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 395:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 397:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 398:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 399:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 400:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 401:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 402:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 403:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 404:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 405:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 406:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 407:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 408:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 409:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 412:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 414:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 416:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 417:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 418:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 419:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 420:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 421:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 422:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 423:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 424:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 425:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 426:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 427:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 428:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 431:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 433:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 435:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 436:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 437:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 438:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 439:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 440:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 441:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 442:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 443:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 444:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 445:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 446:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 447:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 448:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 451:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 452:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** */
 453:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 454:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 455:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 456:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 457:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 458:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 460:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 461:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 462:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 463:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 464:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 465:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 466:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 467:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 468:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 469:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 470:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 471:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 472:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 473:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 474:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 475:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 476:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 477:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 478:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 479:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 480:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 481:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 482:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 483:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 485:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 487:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 488:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 489:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 490:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 491:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 492:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 493:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 494:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 495:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 496:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 497:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 498:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 499:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 500:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 501:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 502:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 503:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   };
 504:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 505:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 506:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 507:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 508:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 509:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 510:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 511:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 512:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 513:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   };
 514:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 515:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 516:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 517:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 518:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 519:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 520:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 521:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 522:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 523:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 524:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 525:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 526:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 527:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 528:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 529:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 530:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 531:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 532:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 533:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 534:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 535:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 536:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 537:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 539:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 540:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 541:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 542:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 543:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 544:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 545:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 546:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 547:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 548:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 550:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 551:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 552:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 553:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 554:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 555:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 556:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 557:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 558:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 559:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 560:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 562:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 563:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 564:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 566:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 567:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 568:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 569:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 570:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 571:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 572:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 573:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 574:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 575:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 576:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 577:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 578:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 579:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 581:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 582:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 583:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 584:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 585:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 586:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 587:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 588:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 589:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 590:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 591:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 592:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 593:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 594:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 595:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 596:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 597:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 598:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 599:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 600:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 601:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 602:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 603:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 605:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 606:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 607:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 608:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 609:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 610:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 611:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 612:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 613:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 614:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 615:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 616:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 617:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 619:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 620:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 621:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 622:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 623:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 624:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 625:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 626:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 627:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 628:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 629:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 630:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 631:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 633:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 634:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 635:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 636:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 637:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 638:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 639:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 640:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 641:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 642:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 643:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 644:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 645:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 646:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 647:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 648:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 649:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 650:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 651:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 652:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 653:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 654:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 655:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 656:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 657:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 658:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 660:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 661:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 662:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 663:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 664:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 665:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 666:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 667:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 668:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 669:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 670:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 671:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 672:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 673:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 674:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 675:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 676:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 677:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 678:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 679:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 680:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 681:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 682:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 683:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 684:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 685:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 686:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 687:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 688:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 689:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 690:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 691:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 692:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 693:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 694:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 695:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 696:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 697:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 698:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 699:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 700:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 701:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 702:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 703:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 704:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 705:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 706:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 707:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 708:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 709:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 710:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 711:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 712:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 713:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 714:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 715:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 716:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 717:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 718:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 719:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 720:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 721:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 722:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 723:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 726:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 728:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 729:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 730:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 731:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 732:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 733:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 734:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 735:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 736:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 737:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 738:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 739:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 740:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 741:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 742:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 744:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 745:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 746:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 747:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 748:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 749:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 750:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 751:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 752:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 753:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 757:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 758:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 759:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 760:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 761:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 762:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 763:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 765:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 766:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 767:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 768:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 769:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 770:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 771:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 772:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 773:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 774:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 775:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 776:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 777:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 778:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 779:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 780:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 781:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 782:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 783:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 784:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 785:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 786:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 787:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 788:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 789:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 790:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 791:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 792:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 793:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 794:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 795:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 799:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 800:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 801:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 803:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 805:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 807:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 813:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 815:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 816:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 817:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 818:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 819:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 820:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 821:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 822:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 823:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 824:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 825:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 826:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 827:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 828:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 829:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 830:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 831:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 832:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 833:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 834:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 835:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 836:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 837:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 838:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 839:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 840:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 841:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 842:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 843:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 844:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 845:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 846:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 847:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 848:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 849:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 850:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 851:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 852:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 853:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 854:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 855:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 856:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 857:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 858:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 859:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 860:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 861:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 862:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 863:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 864:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 865:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 866:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 867:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 868:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 869:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 870:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 871:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 872:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 873:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 874:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 875:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 876:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 877:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 878:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 879:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 880:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 881:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 882:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 883:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 884:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 885:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 886:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 887:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 888:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 889:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 890:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 893:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 895:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 896:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 897:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 898:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 899:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 900:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 901:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 902:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 903:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 904:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 905:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 908:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 910:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 911:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 912:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 913:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 914:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 915:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
 916:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 917:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 918:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 919:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 920:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 926:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 927:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 929:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 930:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 933:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 935:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 936:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 937:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 937 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 081C     	 mov r0,r1
  40 000a 111C     	 mov r1,r2
  41 000c FB1C     	 add r3,r7,#3
  42 000e 021C     	 add r2,r0,#0
  43 0010 1A70     	 strb r2,[r3]
  44 0012 BB1C     	 add r3,r7,#2
  45 0014 0A1C     	 add r2,r1,#0
  46 0016 1A70     	 strb r2,[r3]
 938:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 938 0
  48 0018 FB1C     	 add r3,r7,#3
  49 001a 1878     	 ldrb r0,[r3]
  50 001c FB1C     	 add r3,r7,#3
  51 001e 1B78     	 ldrb r3,[r3]
  52 0020 7A68     	 ldr r2,[r7,#4]
  53 0022 0633     	 add r3,r3,#6
  54 0024 9B00     	 lsl r3,r3,#2
  55 0026 D318     	 add r3,r2,r3
  56 0028 5B68     	 ldr r3,[r3,#4]
  57 002a 074A     	 ldr r2,.L2
  58 002c 1A40     	 and r2,r3
 939:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  59              	 .loc 1 939 0
  60 002e BB1C     	 add r3,r7,#2
  61 0030 1B78     	 ldrb r3,[r3]
  62 0032 9B02     	 lsl r3,r3,#10
 938:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  63              	 .loc 1 938 0
  64 0034 1A43     	 orr r2,r3
  65 0036 7968     	 ldr r1,[r7,#4]
  66 0038 831D     	 add r3,r0,#6
  67 003a 9B00     	 lsl r3,r3,#2
  68 003c CB18     	 add r3,r1,r3
  69 003e 5A60     	 str r2,[r3,#4]
 940:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
  70              	 .loc 1 940 0
  71 0040 BD46     	 mov sp,r7
  72 0042 02B0     	 add sp,sp,#8
  73              	 
  74 0044 80BD     	 pop {r7,pc}
  75              	.L3:
  76 0046 C046     	 .align 2
  77              	.L2:
  78 0048 FFF3FFFF 	 .word -3073
  79              	 .cfi_endproc
  80              	.LFE55:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .code 16
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB56:
 941:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** 
 942:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** /**
 943:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 944:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 945:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 946:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 947:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 949:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 950:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  *
 951:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 952:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 953:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****  */
 954:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 955:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 955 0
  90              	 .cfi_startproc
  91 0000 80B5     	 push {r7,lr}
  92              	.LCFI3:
  93              	 .cfi_def_cfa_offset 8
  94              	 .cfi_offset 7,-8
  95              	 .cfi_offset 14,-4
  96 0002 82B0     	 sub sp,sp,#8
  97              	.LCFI4:
  98              	 .cfi_def_cfa_offset 16
  99 0004 00AF     	 add r7,sp,#0
 100              	.LCFI5:
 101              	 .cfi_def_cfa_register 7
 102 0006 7860     	 str r0,[r7,#4]
 103 0008 0A1C     	 mov r2,r1
 104 000a FB1C     	 add r3,r7,#3
 105 000c 1A70     	 strb r2,[r3]
 956:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 106              	 .loc 1 956 0
 107 000e 7B68     	 ldr r3,[r7,#4]
 108 0010 5B69     	 ldr r3,[r3,#20]
 109 0012 0322     	 mov r2,#3
 110 0014 9343     	 bic r3,r2
 111 0016 1A1C     	 mov r2,r3
 112 0018 FB1C     	 add r3,r7,#3
 113 001a 1B78     	 ldrb r3,[r3]
 114 001c 1A43     	 orr r2,r3
 115 001e 7B68     	 ldr r3,[r7,#4]
 116 0020 5A61     	 str r2,[r3,#20]
 957:C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc\xmc_usic.h **** }
 117              	 .loc 1 957 0
 118 0022 BD46     	 mov sp,r7
 119 0024 02B0     	 add sp,sp,#8
 120              	 
 121 0026 80BD     	 pop {r7,pc}
 122              	 .cfi_endproc
 123              	.LFE56:
 125              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 126              	 .align 2
 127              	 .global XMC_USIC_CH_Enable
 128              	 .code 16
 129              	 .thumb_func
 131              	XMC_USIC_CH_Enable:
 132              	.LFB120:
 133              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2015-09-01
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *
  60:../Libraries/XMCLib/src/xmc_usic.c ****  */
  61:../Libraries/XMCLib/src/xmc_usic.c **** 
  62:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  63:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  64:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  65:../Libraries/XMCLib/src/xmc_usic.c **** 
  66:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  67:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  68:../Libraries/XMCLib/src/xmc_usic.c **** 
  69:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  70:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  72:../Libraries/XMCLib/src/xmc_usic.c **** 
  73:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  74:../Libraries/XMCLib/src/xmc_usic.c **** 
  75:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  76:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  77:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  78:../Libraries/XMCLib/src/xmc_usic.c **** 
  79:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  80:../Libraries/XMCLib/src/xmc_usic.c **** {
 134              	 .loc 2 80 0
 135              	 .cfi_startproc
 136 0000 80B5     	 push {r7,lr}
 137              	.LCFI6:
 138              	 .cfi_def_cfa_offset 8
 139              	 .cfi_offset 7,-8
 140              	 .cfi_offset 14,-4
 141 0002 82B0     	 sub sp,sp,#8
 142              	.LCFI7:
 143              	 .cfi_def_cfa_offset 16
 144 0004 00AF     	 add r7,sp,#0
 145              	.LCFI8:
 146              	 .cfi_def_cfa_register 7
 147 0006 7860     	 str r0,[r7,#4]
  81:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  82:../Libraries/XMCLib/src/xmc_usic.c **** 
  83:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 148              	 .loc 2 83 0
 149 0008 7A68     	 ldr r2,[r7,#4]
 150 000a 9023     	 mov r3,#144
 151 000c DB05     	 lsl r3,r3,#23
 152 000e 9A42     	 cmp r2,r3
 153 0010 03D0     	 beq .L6
 154              	 .loc 2 83 0 is_stmt 0 discriminator 1
 155 0012 7B68     	 ldr r3,[r7,#4]
 156 0014 0C4A     	 ldr r2,.L9
 157 0016 9342     	 cmp r3,r2
 158 0018 03D1     	 bne .L7
 159              	.L6:
  84:../Libraries/XMCLib/src/xmc_usic.c ****   {
  85:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 160              	 .loc 2 85 0 is_stmt 1
 161 001a 0C4B     	 ldr r3,.L9+4
 162 001c 181C     	 mov r0,r3
 163 001e FFF7FEFF 	 bl XMC_USIC_Enable
 164              	.L7:
  86:../Libraries/XMCLib/src/xmc_usic.c ****   }
  87:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
  88:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
  89:../Libraries/XMCLib/src/xmc_usic.c ****   {
  90:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
  91:../Libraries/XMCLib/src/xmc_usic.c ****   }
  92:../Libraries/XMCLib/src/xmc_usic.c **** #endif
  93:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
  94:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
  95:../Libraries/XMCLib/src/xmc_usic.c ****   {
  96:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
  97:../Libraries/XMCLib/src/xmc_usic.c ****   }
  98:../Libraries/XMCLib/src/xmc_usic.c **** #endif
  99:../Libraries/XMCLib/src/xmc_usic.c ****   else
 100:../Libraries/XMCLib/src/xmc_usic.c ****   {
 101:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 102:../Libraries/XMCLib/src/xmc_usic.c ****   }
 103:../Libraries/XMCLib/src/xmc_usic.c **** 
 104:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 105:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 165              	 .loc 2 105 0
 166 0022 7B68     	 ldr r3,[r7,#4]
 167 0024 0322     	 mov r2,#3
 168 0026 DA60     	 str r2,[r3,#12]
 106:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 169              	 .loc 2 106 0
 170 0028 C046     	 mov r8,r8
 171              	.L8:
 172              	 .loc 2 106 0 is_stmt 0 discriminator 1
 173 002a 7B68     	 ldr r3,[r7,#4]
 174 002c DB68     	 ldr r3,[r3,#12]
 175 002e 0122     	 mov r2,#1
 176 0030 1340     	 and r3,r2
 177 0032 FAD0     	 beq .L8
 107:../Libraries/XMCLib/src/xmc_usic.c ****   {
 108:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 109:../Libraries/XMCLib/src/xmc_usic.c ****   }
 110:../Libraries/XMCLib/src/xmc_usic.c **** 
 111:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 112:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 178              	 .loc 2 112 0 is_stmt 1
 179 0034 7B68     	 ldr r3,[r7,#4]
 180 0036 1B6C     	 ldr r3,[r3,#64]
 181 0038 0F22     	 mov r2,#15
 182 003a 9343     	 bic r3,r2
 183 003c 1A1C     	 mov r2,r3
 184 003e 7B68     	 ldr r3,[r7,#4]
 185 0040 1A64     	 str r2,[r3,#64]
 113:../Libraries/XMCLib/src/xmc_usic.c **** }
 186              	 .loc 2 113 0
 187 0042 BD46     	 mov sp,r7
 188 0044 02B0     	 add sp,sp,#8
 189              	 
 190 0046 80BD     	 pop {r7,pc}
 191              	.L10:
 192              	 .align 2
 193              	.L9:
 194 0048 00020048 	 .word 1207960064
 195 004c 08000048 	 .word 1207959560
 196              	 .cfi_endproc
 197              	.LFE120:
 199              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 200              	 .align 2
 201              	 .global XMC_USIC_CH_Disable
 202              	 .code 16
 203              	 .thumb_func
 205              	XMC_USIC_CH_Disable:
 206              	.LFB121:
 114:../Libraries/XMCLib/src/xmc_usic.c **** 
 115:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 116:../Libraries/XMCLib/src/xmc_usic.c **** {
 207              	 .loc 2 116 0
 208              	 .cfi_startproc
 209 0000 80B5     	 push {r7,lr}
 210              	.LCFI9:
 211              	 .cfi_def_cfa_offset 8
 212              	 .cfi_offset 7,-8
 213              	 .cfi_offset 14,-4
 214 0002 82B0     	 sub sp,sp,#8
 215              	.LCFI10:
 216              	 .cfi_def_cfa_offset 16
 217 0004 00AF     	 add r7,sp,#0
 218              	.LCFI11:
 219              	 .cfi_def_cfa_register 7
 220 0006 7860     	 str r0,[r7,#4]
 117:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 221              	 .loc 2 117 0
 222 0008 7B68     	 ldr r3,[r7,#4]
 223 000a DB68     	 ldr r3,[r3,#12]
 224 000c 0322     	 mov r2,#3
 225 000e 9343     	 bic r3,r2
 226 0010 0222     	 mov r2,#2
 227 0012 1A43     	 orr r2,r3
 228 0014 7B68     	 ldr r3,[r7,#4]
 229 0016 DA60     	 str r2,[r3,#12]
 118:../Libraries/XMCLib/src/xmc_usic.c **** }
 230              	 .loc 2 118 0
 231 0018 BD46     	 mov sp,r7
 232 001a 02B0     	 add sp,sp,#8
 233              	 
 234 001c 80BD     	 pop {r7,pc}
 235              	 .cfi_endproc
 236              	.LFE121:
 238              	 .global __aeabi_uidiv
 239 001e C046     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 240              	 .align 2
 241              	 .global XMC_USIC_CH_SetBaudrate
 242              	 .code 16
 243              	 .thumb_func
 245              	XMC_USIC_CH_SetBaudrate:
 246              	.LFB122:
 119:../Libraries/XMCLib/src/xmc_usic.c **** 
 120:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 121:../Libraries/XMCLib/src/xmc_usic.c **** {
 247              	 .loc 2 121 0
 248              	 .cfi_startproc
 249 0000 80B5     	 push {r7,lr}
 250              	.LCFI12:
 251              	 .cfi_def_cfa_offset 8
 252              	 .cfi_offset 7,-8
 253              	 .cfi_offset 14,-4
 254 0002 8EB0     	 sub sp,sp,#56
 255              	.LCFI13:
 256              	 .cfi_def_cfa_offset 64
 257 0004 00AF     	 add r7,sp,#0
 258              	.LCFI14:
 259              	 .cfi_def_cfa_register 7
 260 0006 F860     	 str r0,[r7,#12]
 261 0008 B960     	 str r1,[r7,#8]
 262 000a 7A60     	 str r2,[r7,#4]
 122:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 123:../Libraries/XMCLib/src/xmc_usic.c ****   
 124:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 125:../Libraries/XMCLib/src/xmc_usic.c ****   
 126:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 127:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 128:../Libraries/XMCLib/src/xmc_usic.c **** 
 129:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 130:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 131:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 132:../Libraries/XMCLib/src/xmc_usic.c ****   
 133:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 134:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 135:../Libraries/XMCLib/src/xmc_usic.c **** 
 136:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 137:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 263              	 .loc 2 137 0
 264 000c BB68     	 ldr r3,[r7,#8]
 265 000e 632B     	 cmp r3,#99
 266 0010 5CD9     	 bls .L13
 267              	 .loc 2 137 0 is_stmt 0 discriminator 1
 268 0012 7B68     	 ldr r3,[r7,#4]
 269 0014 002B     	 cmp r3,#0
 270 0016 59D0     	 beq .L13
 138:../Libraries/XMCLib/src/xmc_usic.c ****   {
 139:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 271              	 .loc 2 139 0 is_stmt 1
 272 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 273 001c 031C     	 mov r3,r0
 274 001e 181C     	 mov r0,r3
 275 0020 6421     	 mov r1,#100
 276 0022 FFF7FEFF 	 bl __aeabi_uidiv
 277 0026 031C     	 mov r3,r0
 278 0028 3B62     	 str r3,[r7,#32]
 140:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 279              	 .loc 2 140 0
 280 002a BB68     	 ldr r3,[r7,#8]
 281 002c 181C     	 mov r0,r3
 282 002e 6421     	 mov r1,#100
 283 0030 FFF7FEFF 	 bl __aeabi_uidiv
 284 0034 031C     	 mov r3,r0
 285 0036 BB60     	 str r3,[r7,#8]
 141:../Libraries/XMCLib/src/xmc_usic.c **** 
 142:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 286              	 .loc 2 142 0
 287 0038 0123     	 mov r3,#1
 288 003a FB62     	 str r3,[r7,#44]
 143:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 289              	 .loc 2 143 0
 290 003c 0123     	 mov r3,#1
 291 003e BB62     	 str r3,[r7,#40]
 144:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 292              	 .loc 2 144 0
 293 0040 284B     	 ldr r3,.L19
 294 0042 7B62     	 str r3,[r7,#36]
 145:../Libraries/XMCLib/src/xmc_usic.c **** 
 146:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 295              	 .loc 2 146 0
 296 0044 274B     	 ldr r3,.L19
 297 0046 3B63     	 str r3,[r7,#48]
 298 0048 24E0     	 b .L14
 299              	.L16:
 147:../Libraries/XMCLib/src/xmc_usic.c ****     {
 148:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 300              	 .loc 2 148 0
 301 004a 3B6A     	 ldr r3,[r7,#32]
 302 004c 3A6B     	 ldr r2,[r7,#48]
 303 004e 5A43     	 mul r2,r3
 304 0050 111C     	 mov r1,r2
 305 0052 BB68     	 ldr r3,[r7,#8]
 306 0054 7A68     	 ldr r2,[r7,#4]
 307 0056 5343     	 mul r3,r2
 308 0058 081C     	 mov r0,r1
 309 005a 191C     	 mov r1,r3
 310 005c FFF7FEFF 	 bl __aeabi_uidiv
 311 0060 031C     	 mov r3,r0
 312 0062 FB61     	 str r3,[r7,#28]
 149:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 313              	 .loc 2 149 0
 314 0064 FB69     	 ldr r3,[r7,#28]
 315 0066 9B0A     	 lsr r3,r3,#10
 316 0068 BB61     	 str r3,[r7,#24]
 150:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 317              	 .loc 2 150 0
 318 006a FB69     	 ldr r3,[r7,#28]
 319 006c 9B05     	 lsl r3,r3,#22
 320 006e 9B0D     	 lsr r3,r3,#22
 321 0070 7B61     	 str r3,[r7,#20]
 151:../Libraries/XMCLib/src/xmc_usic.c **** 
 152:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 322              	 .loc 2 152 0
 323 0072 BB69     	 ldr r3,[r7,#24]
 324 0074 1B4A     	 ldr r2,.L19
 325 0076 9342     	 cmp r3,r2
 326 0078 09D8     	 bhi .L15
 327              	 .loc 2 152 0 is_stmt 0 discriminator 1
 328 007a 7A69     	 ldr r2,[r7,#20]
 329 007c 7B6A     	 ldr r3,[r7,#36]
 330 007e 9A42     	 cmp r2,r3
 331 0080 05D2     	 bcs .L15
 153:../Libraries/XMCLib/src/xmc_usic.c ****       {
 154:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 332              	 .loc 2 154 0 is_stmt 1
 333 0082 7B69     	 ldr r3,[r7,#20]
 334 0084 7B62     	 str r3,[r7,#36]
 155:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 335              	 .loc 2 155 0
 336 0086 BB69     	 ldr r3,[r7,#24]
 337 0088 BB62     	 str r3,[r7,#40]
 156:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 338              	 .loc 2 156 0
 339 008a 3B6B     	 ldr r3,[r7,#48]
 340 008c FB62     	 str r3,[r7,#44]
 341              	.L15:
 146:../Libraries/XMCLib/src/xmc_usic.c ****     {
 342              	 .loc 2 146 0 discriminator 2
 343 008e 3B6B     	 ldr r3,[r7,#48]
 344 0090 013B     	 sub r3,r3,#1
 345 0092 3B63     	 str r3,[r7,#48]
 346              	.L14:
 146:../Libraries/XMCLib/src/xmc_usic.c ****     {
 347              	 .loc 2 146 0 is_stmt 0 discriminator 1
 348 0094 3B6B     	 ldr r3,[r7,#48]
 349 0096 002B     	 cmp r3,#0
 350 0098 D7D1     	 bne .L16
 157:../Libraries/XMCLib/src/xmc_usic.c ****       }
 158:../Libraries/XMCLib/src/xmc_usic.c ****     }
 159:../Libraries/XMCLib/src/xmc_usic.c **** 
 160:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 351              	 .loc 2 160 0 is_stmt 1
 352 009a FB6A     	 ldr r3,[r7,#44]
 353 009c 8022     	 mov r2,#128
 354 009e 1202     	 lsl r2,r2,#8
 355 00a0 1A43     	 orr r2,r3
 356 00a2 FB68     	 ldr r3,[r7,#12]
 357 00a4 1A61     	 str r2,[r3,#16]
 161:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 162:../Libraries/XMCLib/src/xmc_usic.c **** 
 163:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 358              	 .loc 2 163 0
 359 00a6 FB68     	 ldr r3,[r7,#12]
 360 00a8 5B69     	 ldr r3,[r3,#20]
 361 00aa 0F4A     	 ldr r2,.L19+4
 362 00ac 1A40     	 and r2,r3
 164:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 165:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 166:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 167:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 363              	 .loc 2 167 0
 364 00ae 7B68     	 ldr r3,[r7,#4]
 365 00b0 013B     	 sub r3,r3,#1
 366 00b2 9B02     	 lsl r3,r3,#10
 166:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 367              	 .loc 2 166 0
 368 00b4 1A43     	 orr r2,r3
 168:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 369              	 .loc 2 168 0
 370 00b6 BB6A     	 ldr r3,[r7,#40]
 371 00b8 013B     	 sub r3,r3,#1
 372 00ba 1B04     	 lsl r3,r3,#16
 167:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 373              	 .loc 2 167 0
 374 00bc 1A43     	 orr r2,r3
 163:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 375              	 .loc 2 163 0
 376 00be FB68     	 ldr r3,[r7,#12]
 377 00c0 5A61     	 str r2,[r3,#20]
 169:../Libraries/XMCLib/src/xmc_usic.c ****                     
 170:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 378              	 .loc 2 170 0
 379 00c2 3723     	 mov r3,#55
 380 00c4 FB18     	 add r3,r7,r3
 381 00c6 0022     	 mov r2,#0
 382 00c8 1A70     	 strb r2,[r3]
 383 00ca 03E0     	 b .L17
 384              	.L13:
 171:../Libraries/XMCLib/src/xmc_usic.c ****   }
 172:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 173:../Libraries/XMCLib/src/xmc_usic.c ****   {
 174:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 385              	 .loc 2 174 0
 386 00cc 3723     	 mov r3,#55
 387 00ce FB18     	 add r3,r7,r3
 388 00d0 0122     	 mov r2,#1
 389 00d2 1A70     	 strb r2,[r3]
 390              	.L17:
 175:../Libraries/XMCLib/src/xmc_usic.c ****   }
 176:../Libraries/XMCLib/src/xmc_usic.c ****   
 177:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 391              	 .loc 2 177 0
 392 00d4 3723     	 mov r3,#55
 393 00d6 FB18     	 add r3,r7,r3
 394 00d8 1B78     	 ldrb r3,[r3]
 178:../Libraries/XMCLib/src/xmc_usic.c **** }
 395              	 .loc 2 178 0
 396 00da 181C     	 mov r0,r3
 397 00dc BD46     	 mov sp,r7
 398 00de 0EB0     	 add sp,sp,#56
 399              	 
 400 00e0 80BD     	 pop {r7,pc}
 401              	.L20:
 402 00e2 C046     	 .align 2
 403              	.L19:
 404 00e4 FF030000 	 .word 1023
 405 00e8 EF8000FC 	 .word -67075857
 406              	 .cfi_endproc
 407              	.LFE122:
 409              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 410              	 .align 2
 411              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 412              	 .code 16
 413              	 .thumb_func
 415              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 416              	.LFB123:
 179:../Libraries/XMCLib/src/xmc_usic.c **** 
 180:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 181:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 182:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 183:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 184:../Libraries/XMCLib/src/xmc_usic.c **** {
 417              	 .loc 2 184 0
 418              	 .cfi_startproc
 419 0000 80B5     	 push {r7,lr}
 420              	.LCFI15:
 421              	 .cfi_def_cfa_offset 8
 422              	 .cfi_offset 7,-8
 423              	 .cfi_offset 14,-4
 424 0002 84B0     	 sub sp,sp,#16
 425              	.LCFI16:
 426              	 .cfi_def_cfa_offset 24
 427 0004 00AF     	 add r7,sp,#0
 428              	.LCFI17:
 429              	 .cfi_def_cfa_register 7
 430 0006 F860     	 str r0,[r7,#12]
 431 0008 081C     	 mov r0,r1
 432 000a 7A60     	 str r2,[r7,#4]
 433 000c 191C     	 mov r1,r3
 434 000e 0A23     	 mov r3,#10
 435 0010 FB18     	 add r3,r7,r3
 436 0012 021C     	 add r2,r0,#0
 437 0014 1A80     	 strh r2,[r3]
 438 0016 0923     	 mov r3,#9
 439 0018 FB18     	 add r3,r7,r3
 440 001a 0A1C     	 add r2,r1,#0
 441 001c 1A70     	 strb r2,[r3]
 185:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 186:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 187:../Libraries/XMCLib/src/xmc_usic.c **** 
 188:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 189:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 442              	 .loc 2 189 0
 443 001e FB68     	 ldr r3,[r7,#12]
 444 0020 181C     	 mov r0,r3
 445 0022 0221     	 mov r1,#2
 446 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 190:../Libraries/XMCLib/src/xmc_usic.c **** 
 191:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 192:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 447              	 .loc 2 192 0
 448 0028 FA68     	 ldr r2,[r7,#12]
 449 002a 0923     	 mov r3,#9
 450 002c FB18     	 add r3,r7,r3
 451 002e 1B78     	 ldrb r3,[r3]
 452 0030 101C     	 mov r0,r2
 453 0032 0121     	 mov r1,#1
 454 0034 1A1C     	 mov r2,r3
 455 0036 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 193:../Libraries/XMCLib/src/xmc_usic.c **** 
 194:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 195:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 456              	 .loc 2 195 0
 457 003a FB68     	 ldr r3,[r7,#12]
 458 003c 5B69     	 ldr r3,[r3,#20]
 459 003e 084A     	 ldr r2,.L22
 460 0040 1A40     	 and r2,r3
 196:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 197:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 198:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 199:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 461              	 .loc 2 199 0
 462 0042 7B68     	 ldr r3,[r7,#4]
 463 0044 013B     	 sub r3,r3,#1
 464 0046 9B02     	 lsl r3,r3,#10
 198:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 465              	 .loc 2 198 0
 466 0048 1A43     	 orr r2,r3
 200:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 467              	 .loc 2 200 0
 468 004a 0A23     	 mov r3,#10
 469 004c FB18     	 add r3,r7,r3
 470 004e 1B88     	 ldrh r3,[r3]
 471 0050 013B     	 sub r3,r3,#1
 472 0052 1B04     	 lsl r3,r3,#16
 199:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 473              	 .loc 2 199 0
 474 0054 1A43     	 orr r2,r3
 195:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 475              	 .loc 2 195 0
 476 0056 FB68     	 ldr r3,[r7,#12]
 477 0058 5A61     	 str r2,[r3,#20]
 201:../Libraries/XMCLib/src/xmc_usic.c **** }
 478              	 .loc 2 201 0
 479 005a BD46     	 mov sp,r7
 480 005c 04B0     	 add sp,sp,#16
 481              	 
 482 005e 80BD     	 pop {r7,pc}
 483              	.L23:
 484              	 .align 2
 485              	.L22:
 486 0060 EF8000FC 	 .word -67075857
 487              	 .cfi_endproc
 488              	.LFE123:
 490              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 491              	 .align 2
 492              	 .global XMC_USIC_CH_TXFIFO_Configure
 493              	 .code 16
 494              	 .thumb_func
 496              	XMC_USIC_CH_TXFIFO_Configure:
 497              	.LFB124:
 202:../Libraries/XMCLib/src/xmc_usic.c **** 
 203:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 204:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 205:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 206:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 207:../Libraries/XMCLib/src/xmc_usic.c **** {
 498              	 .loc 2 207 0
 499              	 .cfi_startproc
 500 0000 80B5     	 push {r7,lr}
 501              	.LCFI18:
 502              	 .cfi_def_cfa_offset 8
 503              	 .cfi_offset 7,-8
 504              	 .cfi_offset 14,-4
 505 0002 84B0     	 sub sp,sp,#16
 506              	.LCFI19:
 507              	 .cfi_def_cfa_offset 24
 508 0004 00AF     	 add r7,sp,#0
 509              	.LCFI20:
 510              	 .cfi_def_cfa_register 7
 511 0006 F860     	 str r0,[r7,#12]
 512 0008 B960     	 str r1,[r7,#8]
 513 000a 3B60     	 str r3,[r7]
 514 000c FB1D     	 add r3,r7,#7
 515 000e 1A70     	 strb r2,[r3]
 208:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 209:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 516              	 .loc 2 209 0
 517 0010 FA68     	 ldr r2,[r7,#12]
 518 0012 8423     	 mov r3,#132
 519 0014 5B00     	 lsl r3,r3,#1
 520 0016 D358     	 ldr r3,[r2,r3]
 521 0018 0E4A     	 ldr r2,.L25
 522 001a 1340     	 and r3,r2
 523 001c 191C     	 mov r1,r3
 524 001e FA68     	 ldr r2,[r7,#12]
 525 0020 8423     	 mov r3,#132
 526 0022 5B00     	 lsl r3,r3,#1
 527 0024 D150     	 str r1,[r2,r3]
 210:../Libraries/XMCLib/src/xmc_usic.c **** 
 211:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 212:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 213:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 214:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 215:../Libraries/XMCLib/src/xmc_usic.c ****    */
 216:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 528              	 .loc 2 216 0
 529 0026 FA68     	 ldr r2,[r7,#12]
 530 0028 8423     	 mov r3,#132
 531 002a 5B00     	 lsl r3,r3,#1
 532 002c D358     	 ldr r3,[r2,r3]
 533 002e 0A4A     	 ldr r2,.L25+4
 534 0030 1A40     	 and r2,r3
 217:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 218:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 219:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 535              	 .loc 2 219 0
 536 0032 3B68     	 ldr r3,[r7]
 537 0034 1902     	 lsl r1,r3,#8
 538 0036 BB68     	 ldr r3,[r7,#8]
 539 0038 1943     	 orr r1,r3
 220:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 221:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 540              	 .loc 2 221 0
 541 003a FB1D     	 add r3,r7,#7
 542 003c 1B78     	 ldrb r3,[r3]
 543 003e 1B06     	 lsl r3,r3,#24
 219:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 544              	 .loc 2 219 0
 545 0040 0B43     	 orr r3,r1
 218:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 546              	 .loc 2 218 0
 547 0042 1A43     	 orr r2,r3
 548 0044 111C     	 mov r1,r2
 216:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 549              	 .loc 2 216 0
 550 0046 FA68     	 ldr r2,[r7,#12]
 551 0048 8423     	 mov r3,#132
 552 004a 5B00     	 lsl r3,r3,#1
 553 004c D150     	 str r1,[r2,r3]
 222:../Libraries/XMCLib/src/xmc_usic.c **** }
 554              	 .loc 2 222 0
 555 004e BD46     	 mov sp,r7
 556 0050 04B0     	 add sp,sp,#16
 557              	 
 558 0052 80BD     	 pop {r7,pc}
 559              	.L26:
 560              	 .align 2
 561              	.L25:
 562 0054 FFFFFFF8 	 .word -117440513
 563 0058 C0C0FFF8 	 .word -117456704
 564              	 .cfi_endproc
 565              	.LFE124:
 567              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 568              	 .align 2
 569              	 .global XMC_USIC_CH_RXFIFO_Configure
 570              	 .code 16
 571              	 .thumb_func
 573              	XMC_USIC_CH_RXFIFO_Configure:
 574              	.LFB125:
 223:../Libraries/XMCLib/src/xmc_usic.c **** 
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 226:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 227:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 229:../Libraries/XMCLib/src/xmc_usic.c **** {
 575              	 .loc 2 229 0
 576              	 .cfi_startproc
 577 0000 80B5     	 push {r7,lr}
 578              	.LCFI21:
 579              	 .cfi_def_cfa_offset 8
 580              	 .cfi_offset 7,-8
 581              	 .cfi_offset 14,-4
 582 0002 84B0     	 sub sp,sp,#16
 583              	.LCFI22:
 584              	 .cfi_def_cfa_offset 24
 585 0004 00AF     	 add r7,sp,#0
 586              	.LCFI23:
 587              	 .cfi_def_cfa_register 7
 588 0006 F860     	 str r0,[r7,#12]
 589 0008 B960     	 str r1,[r7,#8]
 590 000a 3B60     	 str r3,[r7]
 591 000c FB1D     	 add r3,r7,#7
 592 000e 1A70     	 strb r2,[r3]
 230:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 231:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 593              	 .loc 2 231 0
 594 0010 FA68     	 ldr r2,[r7,#12]
 595 0012 8623     	 mov r3,#134
 596 0014 5B00     	 lsl r3,r3,#1
 597 0016 D358     	 ldr r3,[r2,r3]
 598 0018 104A     	 ldr r2,.L28
 599 001a 1340     	 and r3,r2
 600 001c 191C     	 mov r1,r3
 601 001e FA68     	 ldr r2,[r7,#12]
 602 0020 8623     	 mov r3,#134
 603 0022 5B00     	 lsl r3,r3,#1
 604 0024 D150     	 str r1,[r2,r3]
 232:../Libraries/XMCLib/src/xmc_usic.c **** 
 233:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 234:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 235:../Libraries/XMCLib/src/xmc_usic.c ****    */
 236:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 605              	 .loc 2 236 0
 606 0026 FA68     	 ldr r2,[r7,#12]
 607 0028 8623     	 mov r3,#134
 608 002a 5B00     	 lsl r3,r3,#1
 609 002c D358     	 ldr r3,[r2,r3]
 610 002e 0C4A     	 ldr r2,.L28+4
 611 0030 1A40     	 and r2,r3
 237:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 238:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 239:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 612              	 .loc 2 239 0
 613 0032 3B68     	 ldr r3,[r7]
 614 0034 1902     	 lsl r1,r3,#8
 615 0036 BB68     	 ldr r3,[r7,#8]
 616 0038 1943     	 orr r1,r3
 240:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 241:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 617              	 .loc 2 241 0
 618 003a FB1D     	 add r3,r7,#7
 619 003c 1B78     	 ldrb r3,[r3]
 620 003e 1B06     	 lsl r3,r3,#24
 240:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 621              	 .loc 2 240 0
 622 0040 0B43     	 orr r3,r1
 236:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 623              	 .loc 2 236 0
 624 0042 1343     	 orr r3,r2
 625 0044 8022     	 mov r2,#128
 626 0046 5205     	 lsl r2,r2,#21
 627 0048 1A43     	 orr r2,r3
 628 004a 111C     	 mov r1,r2
 629 004c FA68     	 ldr r2,[r7,#12]
 630 004e 8623     	 mov r3,#134
 631 0050 5B00     	 lsl r3,r3,#1
 632 0052 D150     	 str r1,[r2,r3]
 242:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 243:../Libraries/XMCLib/src/xmc_usic.c **** }
 633              	 .loc 2 243 0
 634 0054 BD46     	 mov sp,r7
 635 0056 04B0     	 add sp,sp,#16
 636              	 
 637 0058 80BD     	 pop {r7,pc}
 638              	.L29:
 639 005a C046     	 .align 2
 640              	.L28:
 641 005c FFFFFFF8 	 .word -117440513
 642 0060 C0C0FFEF 	 .word -268451648
 643              	 .cfi_endproc
 644              	.LFE125:
 646              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 647              	 .align 2
 648              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 649              	 .code 16
 650              	 .thumb_func
 652              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 653              	.LFB126:
 244:../Libraries/XMCLib/src/xmc_usic.c **** 
 245:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 246:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 247:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 248:../Libraries/XMCLib/src/xmc_usic.c **** {
 654              	 .loc 2 248 0
 655              	 .cfi_startproc
 656 0000 80B5     	 push {r7,lr}
 657              	.LCFI24:
 658              	 .cfi_def_cfa_offset 8
 659              	 .cfi_offset 7,-8
 660              	 .cfi_offset 14,-4
 661 0002 84B0     	 sub sp,sp,#16
 662              	.LCFI25:
 663              	 .cfi_def_cfa_offset 24
 664 0004 00AF     	 add r7,sp,#0
 665              	.LCFI26:
 666              	 .cfi_def_cfa_register 7
 667 0006 F860     	 str r0,[r7,#12]
 668 0008 7A60     	 str r2,[r7,#4]
 669 000a 0B23     	 mov r3,#11
 670 000c FB18     	 add r3,r7,r3
 671 000e 0A1C     	 add r2,r1,#0
 672 0010 1A70     	 strb r2,[r3]
 249:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 250:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 673              	 .loc 2 250 0
 674 0012 FA68     	 ldr r2,[r7,#12]
 675 0014 8423     	 mov r3,#132
 676 0016 5B00     	 lsl r3,r3,#1
 677 0018 D358     	 ldr r3,[r2,r3]
 678 001a 0E4A     	 ldr r2,.L31
 679 001c 1340     	 and r3,r2
 680 001e 191C     	 mov r1,r3
 681 0020 FA68     	 ldr r2,[r7,#12]
 682 0022 8423     	 mov r3,#132
 683 0024 5B00     	 lsl r3,r3,#1
 684 0026 D150     	 str r1,[r2,r3]
 251:../Libraries/XMCLib/src/xmc_usic.c **** 
 252:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 253:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 254:../Libraries/XMCLib/src/xmc_usic.c ****    */
 255:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 685              	 .loc 2 255 0
 686 0028 FA68     	 ldr r2,[r7,#12]
 687 002a 8423     	 mov r3,#132
 688 002c 5B00     	 lsl r3,r3,#1
 689 002e D358     	 ldr r3,[r2,r3]
 690 0030 094A     	 ldr r2,.L31+4
 691 0032 1A40     	 and r2,r3
 256:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 692              	 .loc 2 256 0
 693 0034 7B68     	 ldr r3,[r7,#4]
 694 0036 1B02     	 lsl r3,r3,#8
 255:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 695              	 .loc 2 255 0
 696 0038 1A43     	 orr r2,r3
 257:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 697              	 .loc 2 257 0
 698 003a 0B23     	 mov r3,#11
 699 003c FB18     	 add r3,r7,r3
 700 003e 1B78     	 ldrb r3,[r3]
 701 0040 1B06     	 lsl r3,r3,#24
 255:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 702              	 .loc 2 255 0
 703 0042 1A43     	 orr r2,r3
 704 0044 111C     	 mov r1,r2
 705 0046 FA68     	 ldr r2,[r7,#12]
 706 0048 8423     	 mov r3,#132
 707 004a 5B00     	 lsl r3,r3,#1
 708 004c D150     	 str r1,[r2,r3]
 258:../Libraries/XMCLib/src/xmc_usic.c **** }
 709              	 .loc 2 258 0
 710 004e BD46     	 mov sp,r7
 711 0050 04B0     	 add sp,sp,#16
 712              	 
 713 0052 80BD     	 pop {r7,pc}
 714              	.L32:
 715              	 .align 2
 716              	.L31:
 717 0054 FFFFFFF8 	 .word -117440513
 718 0058 FFC0FFFF 	 .word -16129
 719              	 .cfi_endproc
 720              	.LFE126:
 722              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 723              	 .align 2
 724              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 725              	 .code 16
 726              	 .thumb_func
 728              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 729              	.LFB127:
 259:../Libraries/XMCLib/src/xmc_usic.c **** 
 260:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 261:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 262:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 263:../Libraries/XMCLib/src/xmc_usic.c **** {
 730              	 .loc 2 263 0
 731              	 .cfi_startproc
 732 0000 80B5     	 push {r7,lr}
 733              	.LCFI27:
 734              	 .cfi_def_cfa_offset 8
 735              	 .cfi_offset 7,-8
 736              	 .cfi_offset 14,-4
 737 0002 84B0     	 sub sp,sp,#16
 738              	.LCFI28:
 739              	 .cfi_def_cfa_offset 24
 740 0004 00AF     	 add r7,sp,#0
 741              	.LCFI29:
 742              	 .cfi_def_cfa_register 7
 743 0006 F860     	 str r0,[r7,#12]
 744 0008 7A60     	 str r2,[r7,#4]
 745 000a 0B23     	 mov r3,#11
 746 000c FB18     	 add r3,r7,r3
 747 000e 0A1C     	 add r2,r1,#0
 748 0010 1A70     	 strb r2,[r3]
 264:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 265:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 749              	 .loc 2 265 0
 750 0012 FA68     	 ldr r2,[r7,#12]
 751 0014 8623     	 mov r3,#134
 752 0016 5B00     	 lsl r3,r3,#1
 753 0018 D358     	 ldr r3,[r2,r3]
 754 001a 0E4A     	 ldr r2,.L34
 755 001c 1340     	 and r3,r2
 756 001e 191C     	 mov r1,r3
 757 0020 FA68     	 ldr r2,[r7,#12]
 758 0022 8623     	 mov r3,#134
 759 0024 5B00     	 lsl r3,r3,#1
 760 0026 D150     	 str r1,[r2,r3]
 266:../Libraries/XMCLib/src/xmc_usic.c **** 
 267:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 761              	 .loc 2 267 0
 762 0028 FA68     	 ldr r2,[r7,#12]
 763 002a 8623     	 mov r3,#134
 764 002c 5B00     	 lsl r3,r3,#1
 765 002e D358     	 ldr r3,[r2,r3]
 766 0030 094A     	 ldr r2,.L34+4
 767 0032 1A40     	 and r2,r3
 268:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 768              	 .loc 2 268 0
 769 0034 7B68     	 ldr r3,[r7,#4]
 770 0036 1B02     	 lsl r3,r3,#8
 267:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 771              	 .loc 2 267 0
 772 0038 1A43     	 orr r2,r3
 269:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 773              	 .loc 2 269 0
 774 003a 0B23     	 mov r3,#11
 775 003c FB18     	 add r3,r7,r3
 776 003e 1B78     	 ldrb r3,[r3]
 777 0040 1B06     	 lsl r3,r3,#24
 267:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 778              	 .loc 2 267 0
 779 0042 1A43     	 orr r2,r3
 780 0044 111C     	 mov r1,r2
 781 0046 FA68     	 ldr r2,[r7,#12]
 782 0048 8623     	 mov r3,#134
 783 004a 5B00     	 lsl r3,r3,#1
 784 004c D150     	 str r1,[r2,r3]
 270:../Libraries/XMCLib/src/xmc_usic.c **** }
 785              	 .loc 2 270 0
 786 004e BD46     	 mov sp,r7
 787 0050 04B0     	 add sp,sp,#16
 788              	 
 789 0052 80BD     	 pop {r7,pc}
 790              	.L35:
 791              	 .align 2
 792              	.L34:
 793 0054 FFFFFFF8 	 .word -117440513
 794 0058 FFC0FFFF 	 .word -16129
 795              	 .cfi_endproc
 796              	.LFE127:
 798              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 799              	 .align 2
 800              	 .global XMC_USIC_CH_SetInterruptNodePointer
 801              	 .code 16
 802              	 .thumb_func
 804              	XMC_USIC_CH_SetInterruptNodePointer:
 805              	.LFB128:
 271:../Libraries/XMCLib/src/xmc_usic.c **** 
 272:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 273:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 274:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 275:../Libraries/XMCLib/src/xmc_usic.c **** {
 806              	 .loc 2 275 0
 807              	 .cfi_startproc
 808 0000 80B5     	 push {r7,lr}
 809              	.LCFI30:
 810              	 .cfi_def_cfa_offset 8
 811              	 .cfi_offset 7,-8
 812              	 .cfi_offset 14,-4
 813 0002 84B0     	 sub sp,sp,#16
 814              	.LCFI31:
 815              	 .cfi_def_cfa_offset 24
 816 0004 00AF     	 add r7,sp,#0
 817              	.LCFI32:
 818              	 .cfi_def_cfa_register 7
 819 0006 F860     	 str r0,[r7,#12]
 820 0008 7A60     	 str r2,[r7,#4]
 821 000a 0B23     	 mov r3,#11
 822 000c FB18     	 add r3,r7,r3
 823 000e 0A1C     	 add r2,r1,#0
 824 0010 1A70     	 strb r2,[r3]
 276:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 825              	 .loc 2 276 0
 826 0012 FB68     	 ldr r3,[r7,#12]
 827 0014 9B69     	 ldr r3,[r3,#24]
 828 0016 0B22     	 mov r2,#11
 829 0018 BA18     	 add r2,r7,r2
 830 001a 1278     	 ldrb r2,[r2]
 831 001c 0721     	 mov r1,#7
 832 001e 9140     	 lsl r1,r1,r2
 833 0020 0A1C     	 mov r2,r1
 834 0022 D243     	 mvn r2,r2
 835 0024 1A40     	 and r2,r3
 277:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 836              	 .loc 2 277 0
 837 0026 0B23     	 mov r3,#11
 838 0028 FB18     	 add r3,r7,r3
 839 002a 1B78     	 ldrb r3,[r3]
 840 002c 7968     	 ldr r1,[r7,#4]
 841 002e 9940     	 lsl r1,r1,r3
 842 0030 0B1C     	 mov r3,r1
 276:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 843              	 .loc 2 276 0
 844 0032 1A43     	 orr r2,r3
 845 0034 FB68     	 ldr r3,[r7,#12]
 846 0036 9A61     	 str r2,[r3,#24]
 278:../Libraries/XMCLib/src/xmc_usic.c **** }
 847              	 .loc 2 278 0
 848 0038 BD46     	 mov sp,r7
 849 003a 04B0     	 add sp,sp,#16
 850              	 
 851 003c 80BD     	 pop {r7,pc}
 852              	 .cfi_endproc
 853              	.LFE128:
 855 003e C046     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 856              	 .align 2
 857              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 858              	 .code 16
 859              	 .thumb_func
 861              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 862              	.LFB129:
 279:../Libraries/XMCLib/src/xmc_usic.c **** 
 280:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 281:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 282:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 283:../Libraries/XMCLib/src/xmc_usic.c **** {
 863              	 .loc 2 283 0
 864              	 .cfi_startproc
 865 0000 80B5     	 push {r7,lr}
 866              	.LCFI33:
 867              	 .cfi_def_cfa_offset 8
 868              	 .cfi_offset 7,-8
 869              	 .cfi_offset 14,-4
 870 0002 84B0     	 sub sp,sp,#16
 871              	.LCFI34:
 872              	 .cfi_def_cfa_offset 24
 873 0004 00AF     	 add r7,sp,#0
 874              	.LCFI35:
 875              	 .cfi_def_cfa_register 7
 876 0006 F860     	 str r0,[r7,#12]
 877 0008 7A60     	 str r2,[r7,#4]
 878 000a 0B23     	 mov r3,#11
 879 000c FB18     	 add r3,r7,r3
 880 000e 0A1C     	 add r2,r1,#0
 881 0010 1A70     	 strb r2,[r3]
 284:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 882              	 .loc 2 284 0
 883 0012 FA68     	 ldr r2,[r7,#12]
 884 0014 8423     	 mov r3,#132
 885 0016 5B00     	 lsl r3,r3,#1
 886 0018 D358     	 ldr r3,[r2,r3]
 887 001a 0B22     	 mov r2,#11
 888 001c BA18     	 add r2,r7,r2
 889 001e 1278     	 ldrb r2,[r2]
 890 0020 0721     	 mov r1,#7
 891 0022 9140     	 lsl r1,r1,r2
 892 0024 0A1C     	 mov r2,r1
 893 0026 D243     	 mvn r2,r2
 894 0028 1A40     	 and r2,r3
 285:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 895              	 .loc 2 285 0
 896 002a 0B23     	 mov r3,#11
 897 002c FB18     	 add r3,r7,r3
 898 002e 1B78     	 ldrb r3,[r3]
 899 0030 7968     	 ldr r1,[r7,#4]
 900 0032 9940     	 lsl r1,r1,r3
 901 0034 0B1C     	 mov r3,r1
 284:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 902              	 .loc 2 284 0
 903 0036 1A43     	 orr r2,r3
 904 0038 111C     	 mov r1,r2
 905 003a FA68     	 ldr r2,[r7,#12]
 906 003c 8423     	 mov r3,#132
 907 003e 5B00     	 lsl r3,r3,#1
 908 0040 D150     	 str r1,[r2,r3]
 286:../Libraries/XMCLib/src/xmc_usic.c **** }
 909              	 .loc 2 286 0
 910 0042 BD46     	 mov sp,r7
 911 0044 04B0     	 add sp,sp,#16
 912              	 
 913 0046 80BD     	 pop {r7,pc}
 914              	 .cfi_endproc
 915              	.LFE129:
 917              	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 918              	 .align 2
 919              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 920              	 .code 16
 921              	 .thumb_func
 923              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 924              	.LFB130:
 287:../Libraries/XMCLib/src/xmc_usic.c **** 
 288:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 289:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 290:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 291:../Libraries/XMCLib/src/xmc_usic.c **** {
 925              	 .loc 2 291 0
 926              	 .cfi_startproc
 927 0000 80B5     	 push {r7,lr}
 928              	.LCFI36:
 929              	 .cfi_def_cfa_offset 8
 930              	 .cfi_offset 7,-8
 931              	 .cfi_offset 14,-4
 932 0002 84B0     	 sub sp,sp,#16
 933              	.LCFI37:
 934              	 .cfi_def_cfa_offset 24
 935 0004 00AF     	 add r7,sp,#0
 936              	.LCFI38:
 937              	 .cfi_def_cfa_register 7
 938 0006 F860     	 str r0,[r7,#12]
 939 0008 7A60     	 str r2,[r7,#4]
 940 000a 0B23     	 mov r3,#11
 941 000c FB18     	 add r3,r7,r3
 942 000e 0A1C     	 add r2,r1,#0
 943 0010 1A70     	 strb r2,[r3]
 292:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 944              	 .loc 2 292 0
 945 0012 FA68     	 ldr r2,[r7,#12]
 946 0014 8623     	 mov r3,#134
 947 0016 5B00     	 lsl r3,r3,#1
 948 0018 D358     	 ldr r3,[r2,r3]
 949 001a 0B22     	 mov r2,#11
 950 001c BA18     	 add r2,r7,r2
 951 001e 1278     	 ldrb r2,[r2]
 952 0020 0721     	 mov r1,#7
 953 0022 9140     	 lsl r1,r1,r2
 954 0024 0A1C     	 mov r2,r1
 955 0026 D243     	 mvn r2,r2
 956 0028 1A40     	 and r2,r3
 293:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 957              	 .loc 2 293 0
 958 002a 0B23     	 mov r3,#11
 959 002c FB18     	 add r3,r7,r3
 960 002e 1B78     	 ldrb r3,[r3]
 961 0030 7968     	 ldr r1,[r7,#4]
 962 0032 9940     	 lsl r1,r1,r3
 963 0034 0B1C     	 mov r3,r1
 292:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 964              	 .loc 2 292 0
 965 0036 1A43     	 orr r2,r3
 966 0038 111C     	 mov r1,r2
 967 003a FA68     	 ldr r2,[r7,#12]
 968 003c 8623     	 mov r3,#134
 969 003e 5B00     	 lsl r3,r3,#1
 970 0040 D150     	 str r1,[r2,r3]
 294:../Libraries/XMCLib/src/xmc_usic.c **** }
 971              	 .loc 2 294 0
 972 0042 BD46     	 mov sp,r7
 973 0044 04B0     	 add sp,sp,#16
 974              	 
 975 0046 80BD     	 pop {r7,pc}
 976              	 .cfi_endproc
 977              	.LFE130:
 979              	 .section .text.XMC_USIC_Enable,"ax",%progbits
 980              	 .align 2
 981              	 .global XMC_USIC_Enable
 982              	 .code 16
 983              	 .thumb_func
 985              	XMC_USIC_Enable:
 986              	.LFB131:
 295:../Libraries/XMCLib/src/xmc_usic.c **** 
 296:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 297:../Libraries/XMCLib/src/xmc_usic.c **** {
 987              	 .loc 2 297 0
 988              	 .cfi_startproc
 989 0000 80B5     	 push {r7,lr}
 990              	.LCFI39:
 991              	 .cfi_def_cfa_offset 8
 992              	 .cfi_offset 7,-8
 993              	 .cfi_offset 14,-4
 994 0002 82B0     	 sub sp,sp,#8
 995              	.LCFI40:
 996              	 .cfi_def_cfa_offset 16
 997 0004 00AF     	 add r7,sp,#0
 998              	.LCFI41:
 999              	 .cfi_def_cfa_register 7
 1000 0006 7860     	 str r0,[r7,#4]
 298:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1001              	 .loc 2 298 0
 1002 0008 7B68     	 ldr r3,[r7,#4]
 1003 000a 044A     	 ldr r2,.L41
 1004 000c 9342     	 cmp r3,r2
 1005 000e 02D1     	 bne .L39
 299:../Libraries/XMCLib/src/xmc_usic.c ****   {
 300:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 301:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1006              	 .loc 2 301 0
 1007 0010 0820     	 mov r0,#8
 1008 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 1009              	.L39:
 302:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 303:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 304:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 305:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 306:../Libraries/XMCLib/src/xmc_usic.c ****   }
 307:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 308:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 309:../Libraries/XMCLib/src/xmc_usic.c ****   {
 310:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 311:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 312:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 313:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 314:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 315:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 316:../Libraries/XMCLib/src/xmc_usic.c ****   }
 317:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 318:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 319:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 320:../Libraries/XMCLib/src/xmc_usic.c ****   {
 321:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 322:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 323:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 324:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 325:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 326:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 327:../Libraries/XMCLib/src/xmc_usic.c ****   }
 328:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 329:../Libraries/XMCLib/src/xmc_usic.c ****   else
 330:../Libraries/XMCLib/src/xmc_usic.c ****   {
 331:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 332:../Libraries/XMCLib/src/xmc_usic.c ****   }
 333:../Libraries/XMCLib/src/xmc_usic.c **** }
 1010              	 .loc 2 333 0
 1011 0016 BD46     	 mov sp,r7
 1012 0018 02B0     	 add sp,sp,#8
 1013              	 
 1014 001a 80BD     	 pop {r7,pc}
 1015              	.L42:
 1016              	 .align 2
 1017              	.L41:
 1018 001c 08000048 	 .word 1207959560
 1019              	 .cfi_endproc
 1020              	.LFE131:
 1022              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1023              	 .align 2
 1024              	 .global XMC_USIC_Disable
 1025              	 .code 16
 1026              	 .thumb_func
 1028              	XMC_USIC_Disable:
 1029              	.LFB132:
 334:../Libraries/XMCLib/src/xmc_usic.c **** 
 335:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 336:../Libraries/XMCLib/src/xmc_usic.c **** {
 1030              	 .loc 2 336 0
 1031              	 .cfi_startproc
 1032 0000 80B5     	 push {r7,lr}
 1033              	.LCFI42:
 1034              	 .cfi_def_cfa_offset 8
 1035              	 .cfi_offset 7,-8
 1036              	 .cfi_offset 14,-4
 1037 0002 82B0     	 sub sp,sp,#8
 1038              	.LCFI43:
 1039              	 .cfi_def_cfa_offset 16
 1040 0004 00AF     	 add r7,sp,#0
 1041              	.LCFI44:
 1042              	 .cfi_def_cfa_register 7
 1043 0006 7860     	 str r0,[r7,#4]
 337:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1044              	 .loc 2 337 0
 1045 0008 7B68     	 ldr r3,[r7,#4]
 1046 000a 044A     	 ldr r2,.L45
 1047 000c 9342     	 cmp r3,r2
 1048 000e 02D1     	 bne .L43
 338:../Libraries/XMCLib/src/xmc_usic.c ****   {
 339:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 340:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 341:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 342:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 343:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1049              	 .loc 2 343 0
 1050 0010 0820     	 mov r0,#8
 1051 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1052              	.L43:
 344:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 345:../Libraries/XMCLib/src/xmc_usic.c ****   }
 346:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 347:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 348:../Libraries/XMCLib/src/xmc_usic.c ****   {
 349:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 350:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 351:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 352:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 353:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 354:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 355:../Libraries/XMCLib/src/xmc_usic.c ****   }
 356:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 357:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 358:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 359:../Libraries/XMCLib/src/xmc_usic.c ****   {
 360:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 361:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 362:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 363:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 364:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 365:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 366:../Libraries/XMCLib/src/xmc_usic.c ****   }
 367:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 368:../Libraries/XMCLib/src/xmc_usic.c ****   else
 369:../Libraries/XMCLib/src/xmc_usic.c ****   {
 370:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 371:../Libraries/XMCLib/src/xmc_usic.c ****   }
 372:../Libraries/XMCLib/src/xmc_usic.c ****   
 373:../Libraries/XMCLib/src/xmc_usic.c **** }
 1053              	 .loc 2 373 0
 1054 0016 BD46     	 mov sp,r7
 1055 0018 02B0     	 add sp,sp,#8
 1056              	 
 1057 001a 80BD     	 pop {r7,pc}
 1058              	.L46:
 1059              	 .align 2
 1060              	.L45:
 1061 001c 08000048 	 .word 1207959560
 1062              	 .cfi_endproc
 1063              	.LFE132:
 1065              	 .text
 1066              	.Letext0:
 1067              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1068              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1069              	 .file 5 "C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 1070              	 .file 6 "C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/XMCLib/inc/xmc1_scu.h"
 1071              	 .file 7 "C:/Users/Public/OptiSort/OptiSort/Microcontroller/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:18     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:78     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000048 $d
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:126    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:131    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:985    .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:194    .text.XMC_USIC_CH_Enable:00000048 $d
    {standard input}:200    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:205    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:240    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:245    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:404    .text.XMC_USIC_CH_SetBaudrate:000000e4 $d
    {standard input}:410    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:415    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:486    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000060 $d
    {standard input}:491    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:496    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:562    .text.XMC_USIC_CH_TXFIFO_Configure:00000054 $d
    {standard input}:568    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:573    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:641    .text.XMC_USIC_CH_RXFIFO_Configure:0000005c $d
    {standard input}:647    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:652    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:717    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000054 $d
    {standard input}:723    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:728    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:793    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000054 $d
    {standard input}:799    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:804    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:856    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:861    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:918    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:923    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:980    .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1018   .text.XMC_USIC_Enable:0000001c $d
    {standard input}:1023   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1028   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1061   .text.XMC_USIC_Disable:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GatePeripheralClock
